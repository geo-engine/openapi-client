/* tslint:disable */
/* eslint-disable */
/**
 * Geo Engine Pro API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.8.0
 * Contact: dev@geoengine.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { DataPath } from './DataPath';
import {
    DataPathFromJSON,
    DataPathFromJSONTyped,
    DataPathToJSON,
} from './DataPath';

/**
 * 
 * @export
 * @interface SuggestMetaData
 */
export interface SuggestMetaData {
    /**
     * 
     * @type {DataPath}
     * @memberof SuggestMetaData
     */
    dataPath: DataPath;
    /**
     * 
     * @type {string}
     * @memberof SuggestMetaData
     */
    layerName?: string | null;
    /**
     * 
     * @type {string}
     * @memberof SuggestMetaData
     */
    mainFile?: string | null;
}

/**
 * Check if a given object implements the SuggestMetaData interface.
 */
export function instanceOfSuggestMetaData(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "dataPath" in value;

    return isInstance;
}

export function SuggestMetaDataFromJSON(json: any): SuggestMetaData {
    return SuggestMetaDataFromJSONTyped(json, false);
}

export function SuggestMetaDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): SuggestMetaData {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'dataPath': DataPathFromJSON(json['dataPath']),
        'layerName': !exists(json, 'layerName') ? undefined : json['layerName'],
        'mainFile': !exists(json, 'mainFile') ? undefined : json['mainFile'],
    };
}

export function SuggestMetaDataToJSON(value?: SuggestMetaData | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'dataPath': DataPathToJSON(value.dataPath),
        'layerName': value.layerName,
        'mainFile': value.mainFile,
    };
}

