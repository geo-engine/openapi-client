"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Geo Engine Pro API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.8.0
 * Contact: dev@geoengine.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.SpatialGridDescriptorToJSON = exports.SpatialGridDescriptorFromJSONTyped = exports.SpatialGridDescriptorFromJSON = void 0;
const SpatialGridDescriptorOneOf_1 = require("./SpatialGridDescriptorOneOf");
const SpatialGridDescriptorOneOf1_1 = require("./SpatialGridDescriptorOneOf1");
function SpatialGridDescriptorFromJSON(json) {
    return SpatialGridDescriptorFromJSONTyped(json, false);
}
exports.SpatialGridDescriptorFromJSON = SpatialGridDescriptorFromJSON;
function SpatialGridDescriptorFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return Object.assign(Object.assign({}, (0, SpatialGridDescriptorOneOf_1.SpatialGridDescriptorOneOfFromJSONTyped)(json, true)), (0, SpatialGridDescriptorOneOf1_1.SpatialGridDescriptorOneOf1FromJSONTyped)(json, true));
}
exports.SpatialGridDescriptorFromJSONTyped = SpatialGridDescriptorFromJSONTyped;
function SpatialGridDescriptorToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    if ((0, SpatialGridDescriptorOneOf_1.instanceOfSpatialGridDescriptorOneOf)(value)) {
        return (0, SpatialGridDescriptorOneOf_1.SpatialGridDescriptorOneOfToJSON)(value);
    }
    if ((0, SpatialGridDescriptorOneOf1_1.instanceOfSpatialGridDescriptorOneOf1)(value)) {
        return (0, SpatialGridDescriptorOneOf1_1.SpatialGridDescriptorOneOf1ToJSON)(value);
    }
    return {};
}
exports.SpatialGridDescriptorToJSON = SpatialGridDescriptorToJSON;
