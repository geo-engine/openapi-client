"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Geo Engine API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.9.0
 * Contact: dev@geoengine.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfMultiPoint = instanceOfMultiPoint;
exports.MultiPointFromJSON = MultiPointFromJSON;
exports.MultiPointFromJSONTyped = MultiPointFromJSONTyped;
exports.MultiPointToJSON = MultiPointToJSON;
exports.MultiPointToJSONTyped = MultiPointToJSONTyped;
const Coordinate2D_1 = require("./Coordinate2D");
/**
 * Check if a given object implements the MultiPoint interface.
 */
function instanceOfMultiPoint(value) {
    if (!('coordinates' in value) || value['coordinates'] === undefined)
        return false;
    return true;
}
function MultiPointFromJSON(json) {
    return MultiPointFromJSONTyped(json, false);
}
function MultiPointFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'coordinates': (json['coordinates'].map(Coordinate2D_1.Coordinate2DFromJSON)),
    };
}
function MultiPointToJSON(json) {
    return MultiPointToJSONTyped(json, false);
}
function MultiPointToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'coordinates': (value['coordinates'].map(Coordinate2D_1.Coordinate2DToJSON)),
    };
}
