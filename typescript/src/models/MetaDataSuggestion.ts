/* tslint:disable */
/* eslint-disable */
/**
 * Geo Engine Pro API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.8.0
 * Contact: dev@geoengine.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { MetaDataDefinition } from './MetaDataDefinition';
import {
    MetaDataDefinitionFromJSON,
    MetaDataDefinitionFromJSONTyped,
    MetaDataDefinitionToJSON,
} from './MetaDataDefinition';

/**
 * 
 * @export
 * @interface MetaDataSuggestion
 */
export interface MetaDataSuggestion {
    /**
     * 
     * @type {string}
     * @memberof MetaDataSuggestion
     */
    layerName: string;
    /**
     * 
     * @type {string}
     * @memberof MetaDataSuggestion
     */
    mainFile: string;
    /**
     * 
     * @type {MetaDataDefinition}
     * @memberof MetaDataSuggestion
     */
    metaData: MetaDataDefinition;
}

/**
 * Check if a given object implements the MetaDataSuggestion interface.
 */
export function instanceOfMetaDataSuggestion(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "layerName" in value;
    isInstance = isInstance && "mainFile" in value;
    isInstance = isInstance && "metaData" in value;

    return isInstance;
}

export function MetaDataSuggestionFromJSON(json: any): MetaDataSuggestion {
    return MetaDataSuggestionFromJSONTyped(json, false);
}

export function MetaDataSuggestionFromJSONTyped(json: any, ignoreDiscriminator: boolean): MetaDataSuggestion {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'layerName': json['layerName'],
        'mainFile': json['mainFile'],
        'metaData': MetaDataDefinitionFromJSON(json['metaData']),
    };
}

export function MetaDataSuggestionToJSON(value?: MetaDataSuggestion | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'layerName': value.layerName,
        'mainFile': value.mainFile,
        'metaData': MetaDataDefinitionToJSON(value.metaData),
    };
}

