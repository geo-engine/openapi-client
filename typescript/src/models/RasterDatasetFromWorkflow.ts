/* tslint:disable */
/* eslint-disable */
/**
 * Geo Engine API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.8.0
 * Contact: dev@geoengine.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { RasterToDatasetQueryRectangle } from './RasterToDatasetQueryRectangle';
import {
    RasterToDatasetQueryRectangleFromJSON,
    RasterToDatasetQueryRectangleFromJSONTyped,
    RasterToDatasetQueryRectangleToJSON,
    RasterToDatasetQueryRectangleToJSONTyped,
} from './RasterToDatasetQueryRectangle';

/**
 * parameter for the dataset from workflow handler (body)
 * @export
 * @interface RasterDatasetFromWorkflow
 */
export interface RasterDatasetFromWorkflow {
    /**
     * 
     * @type {boolean}
     * @memberof RasterDatasetFromWorkflow
     */
    asCog?: boolean;
    /**
     * 
     * @type {string}
     * @memberof RasterDatasetFromWorkflow
     */
    description?: string | null;
    /**
     * 
     * @type {string}
     * @memberof RasterDatasetFromWorkflow
     */
    displayName: string;
    /**
     * 
     * @type {string}
     * @memberof RasterDatasetFromWorkflow
     */
    name?: string;
    /**
     * 
     * @type {RasterToDatasetQueryRectangle}
     * @memberof RasterDatasetFromWorkflow
     */
    query: RasterToDatasetQueryRectangle;
}

/**
 * Check if a given object implements the RasterDatasetFromWorkflow interface.
 */
export function instanceOfRasterDatasetFromWorkflow(value: object): value is RasterDatasetFromWorkflow {
    if (!('displayName' in value) || value['displayName'] === undefined) return false;
    if (!('query' in value) || value['query'] === undefined) return false;
    return true;
}

export function RasterDatasetFromWorkflowFromJSON(json: any): RasterDatasetFromWorkflow {
    return RasterDatasetFromWorkflowFromJSONTyped(json, false);
}

export function RasterDatasetFromWorkflowFromJSONTyped(json: any, ignoreDiscriminator: boolean): RasterDatasetFromWorkflow {
    if (json == null) {
        return json;
    }
    return {
        
        'asCog': json['asCog'] == null ? undefined : json['asCog'],
        'description': json['description'] == null ? undefined : json['description'],
        'displayName': json['displayName'],
        'name': json['name'] == null ? undefined : json['name'],
        'query': RasterToDatasetQueryRectangleFromJSON(json['query']),
    };
}

export function RasterDatasetFromWorkflowToJSON(json: any): RasterDatasetFromWorkflow {
    return RasterDatasetFromWorkflowToJSONTyped(json, false);
}

export function RasterDatasetFromWorkflowToJSONTyped(value?: RasterDatasetFromWorkflow | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'asCog': value['asCog'],
        'description': value['description'],
        'displayName': value['displayName'],
        'name': value['name'],
        'query': RasterToDatasetQueryRectangleToJSON(value['query']),
    };
}

