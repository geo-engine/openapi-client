/* tslint:disable */
/* eslint-disable */
/**
 * Geo Engine API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.9.0
 * Contact: dev@geoengine.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { BreakpointFromJSON, BreakpointToJSON, } from './Breakpoint';
/**
 * @export
 */
export const LinearGradientTypeEnum = {
    LinearGradient: 'linearGradient'
};
/**
 * Check if a given object implements the LinearGradient interface.
 */
export function instanceOfLinearGradient(value) {
    if (!('breakpoints' in value) || value['breakpoints'] === undefined)
        return false;
    if (!('noDataColor' in value) || value['noDataColor'] === undefined)
        return false;
    if (!('overColor' in value) || value['overColor'] === undefined)
        return false;
    if (!('type' in value) || value['type'] === undefined)
        return false;
    if (!('underColor' in value) || value['underColor'] === undefined)
        return false;
    return true;
}
export function LinearGradientFromJSON(json) {
    return LinearGradientFromJSONTyped(json, false);
}
export function LinearGradientFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'breakpoints': (json['breakpoints'].map(BreakpointFromJSON)),
        'noDataColor': json['noDataColor'],
        'overColor': json['overColor'],
        'type': json['type'],
        'underColor': json['underColor'],
    };
}
export function LinearGradientToJSON(json) {
    return LinearGradientToJSONTyped(json, false);
}
export function LinearGradientToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'breakpoints': (value['breakpoints'].map(BreakpointToJSON)),
        'noDataColor': value['noDataColor'],
        'overColor': value['overColor'],
        'type': value['type'],
        'underColor': value['underColor'],
    };
}
