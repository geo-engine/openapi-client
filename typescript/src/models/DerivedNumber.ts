/* tslint:disable */
/* eslint-disable */
/**
 * Geo Engine API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.9.0
 * Contact: dev@geoengine.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface DerivedNumber
 */
export interface DerivedNumber {
    /**
     * 
     * @type {string}
     * @memberof DerivedNumber
     */
    attribute: string;
    /**
     * 
     * @type {number}
     * @memberof DerivedNumber
     */
    defaultValue: number;
    /**
     * 
     * @type {number}
     * @memberof DerivedNumber
     */
    factor: number;
    /**
     * 
     * @type {string}
     * @memberof DerivedNumber
     */
    type: DerivedNumberTypeEnum;
}


/**
 * @export
 */
export const DerivedNumberTypeEnum = {
    Derived: 'derived'
} as const;
export type DerivedNumberTypeEnum = typeof DerivedNumberTypeEnum[keyof typeof DerivedNumberTypeEnum];


/**
 * Check if a given object implements the DerivedNumber interface.
 */
export function instanceOfDerivedNumber(value: object): value is DerivedNumber {
    if (!('attribute' in value) || value['attribute'] === undefined) return false;
    if (!('defaultValue' in value) || value['defaultValue'] === undefined) return false;
    if (!('factor' in value) || value['factor'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    return true;
}

export function DerivedNumberFromJSON(json: any): DerivedNumber {
    return DerivedNumberFromJSONTyped(json, false);
}

export function DerivedNumberFromJSONTyped(json: any, ignoreDiscriminator: boolean): DerivedNumber {
    if (json == null) {
        return json;
    }
    return {
        
        'attribute': json['attribute'],
        'defaultValue': json['defaultValue'],
        'factor': json['factor'],
        'type': json['type'],
    };
}

export function DerivedNumberToJSON(json: any): DerivedNumber {
    return DerivedNumberToJSONTyped(json, false);
}

export function DerivedNumberToJSONTyped(value?: DerivedNumber | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'attribute': value['attribute'],
        'defaultValue': value['defaultValue'],
        'factor': value['factor'],
        'type': value['type'],
    };
}

