/* tslint:disable */
/* eslint-disable */
/**
 * Geo Engine API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.9.0
 * Contact: dev@geoengine.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { OgrSourceTimeFormatFromJSON, OgrSourceTimeFormatToJSON, } from './OgrSourceTimeFormat';
import { OgrSourceDurationSpecFromJSON, OgrSourceDurationSpecToJSON, } from './OgrSourceDurationSpec';
/**
 * @export
 */
export const OgrSourceDatasetTimeTypeStartTypeEnum = {
    Start: 'start'
};
/**
 * Check if a given object implements the OgrSourceDatasetTimeTypeStart interface.
 */
export function instanceOfOgrSourceDatasetTimeTypeStart(value) {
    if (!('duration' in value) || value['duration'] === undefined)
        return false;
    if (!('startField' in value) || value['startField'] === undefined)
        return false;
    if (!('startFormat' in value) || value['startFormat'] === undefined)
        return false;
    if (!('type' in value) || value['type'] === undefined)
        return false;
    return true;
}
export function OgrSourceDatasetTimeTypeStartFromJSON(json) {
    return OgrSourceDatasetTimeTypeStartFromJSONTyped(json, false);
}
export function OgrSourceDatasetTimeTypeStartFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'duration': OgrSourceDurationSpecFromJSON(json['duration']),
        'startField': json['startField'],
        'startFormat': OgrSourceTimeFormatFromJSON(json['startFormat']),
        'type': json['type'],
    };
}
export function OgrSourceDatasetTimeTypeStartToJSON(json) {
    return OgrSourceDatasetTimeTypeStartToJSONTyped(json, false);
}
export function OgrSourceDatasetTimeTypeStartToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'duration': OgrSourceDurationSpecToJSON(value['duration']),
        'startField': value['startField'],
        'startFormat': OgrSourceTimeFormatToJSON(value['startFormat']),
        'type': value['type'],
    };
}
