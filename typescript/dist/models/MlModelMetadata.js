"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Geo Engine API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.8.0
 * Contact: dev@geoengine.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfMlModelMetadata = instanceOfMlModelMetadata;
exports.MlModelMetadataFromJSON = MlModelMetadataFromJSON;
exports.MlModelMetadataFromJSONTyped = MlModelMetadataFromJSONTyped;
exports.MlModelMetadataToJSON = MlModelMetadataToJSON;
exports.MlModelMetadataToJSONTyped = MlModelMetadataToJSONTyped;
const MlModelOutputNoDataHandling_1 = require("./MlModelOutputNoDataHandling");
const MlModelInputNoDataHandling_1 = require("./MlModelInputNoDataHandling");
const MlTensorShape3D_1 = require("./MlTensorShape3D");
const RasterDataType_1 = require("./RasterDataType");
/**
 * Check if a given object implements the MlModelMetadata interface.
 */
function instanceOfMlModelMetadata(value) {
    if (!('inputNoDataHandling' in value) || value['inputNoDataHandling'] === undefined)
        return false;
    if (!('inputShape' in value) || value['inputShape'] === undefined)
        return false;
    if (!('inputType' in value) || value['inputType'] === undefined)
        return false;
    if (!('outputNoDataHandling' in value) || value['outputNoDataHandling'] === undefined)
        return false;
    if (!('outputShape' in value) || value['outputShape'] === undefined)
        return false;
    if (!('outputType' in value) || value['outputType'] === undefined)
        return false;
    return true;
}
function MlModelMetadataFromJSON(json) {
    return MlModelMetadataFromJSONTyped(json, false);
}
function MlModelMetadataFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'inputNoDataHandling': (0, MlModelInputNoDataHandling_1.MlModelInputNoDataHandlingFromJSON)(json['input_no_data_handling']),
        'inputShape': (0, MlTensorShape3D_1.MlTensorShape3DFromJSON)(json['input_shape']),
        'inputType': (0, RasterDataType_1.RasterDataTypeFromJSON)(json['input_type']),
        'outputNoDataHandling': (0, MlModelOutputNoDataHandling_1.MlModelOutputNoDataHandlingFromJSON)(json['output_no_data_handling']),
        'outputShape': (0, MlTensorShape3D_1.MlTensorShape3DFromJSON)(json['output_shape']),
        'outputType': (0, RasterDataType_1.RasterDataTypeFromJSON)(json['output_type']),
    };
}
function MlModelMetadataToJSON(json) {
    return MlModelMetadataToJSONTyped(json, false);
}
function MlModelMetadataToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'input_no_data_handling': (0, MlModelInputNoDataHandling_1.MlModelInputNoDataHandlingToJSON)(value['inputNoDataHandling']),
        'input_shape': (0, MlTensorShape3D_1.MlTensorShape3DToJSON)(value['inputShape']),
        'input_type': (0, RasterDataType_1.RasterDataTypeToJSON)(value['inputType']),
        'output_no_data_handling': (0, MlModelOutputNoDataHandling_1.MlModelOutputNoDataHandlingToJSON)(value['outputNoDataHandling']),
        'output_shape': (0, MlTensorShape3D_1.MlTensorShape3DToJSON)(value['outputShape']),
        'output_type': (0, RasterDataType_1.RasterDataTypeToJSON)(value['outputType']),
    };
}
