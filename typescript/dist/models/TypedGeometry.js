"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Geo Engine Pro API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.8.0
 * Contact: dev@geoengine.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.TypedGeometryToJSON = exports.TypedGeometryFromJSONTyped = exports.TypedGeometryFromJSON = void 0;
const TypedGeometryOneOf_1 = require("./TypedGeometryOneOf");
const TypedGeometryOneOf1_1 = require("./TypedGeometryOneOf1");
const TypedGeometryOneOf2_1 = require("./TypedGeometryOneOf2");
const TypedGeometryOneOf3_1 = require("./TypedGeometryOneOf3");
function TypedGeometryFromJSON(json) {
    return TypedGeometryFromJSONTyped(json, false);
}
exports.TypedGeometryFromJSON = TypedGeometryFromJSON;
function TypedGeometryFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return Object.assign(Object.assign(Object.assign(Object.assign({}, (0, TypedGeometryOneOf_1.TypedGeometryOneOfFromJSONTyped)(json, true)), (0, TypedGeometryOneOf1_1.TypedGeometryOneOf1FromJSONTyped)(json, true)), (0, TypedGeometryOneOf2_1.TypedGeometryOneOf2FromJSONTyped)(json, true)), (0, TypedGeometryOneOf3_1.TypedGeometryOneOf3FromJSONTyped)(json, true));
}
exports.TypedGeometryFromJSONTyped = TypedGeometryFromJSONTyped;
function TypedGeometryToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    if ((0, TypedGeometryOneOf_1.instanceOfTypedGeometryOneOf)(value)) {
        return (0, TypedGeometryOneOf_1.TypedGeometryOneOfToJSON)(value);
    }
    if ((0, TypedGeometryOneOf1_1.instanceOfTypedGeometryOneOf1)(value)) {
        return (0, TypedGeometryOneOf1_1.TypedGeometryOneOf1ToJSON)(value);
    }
    if ((0, TypedGeometryOneOf2_1.instanceOfTypedGeometryOneOf2)(value)) {
        return (0, TypedGeometryOneOf2_1.TypedGeometryOneOf2ToJSON)(value);
    }
    if ((0, TypedGeometryOneOf3_1.instanceOfTypedGeometryOneOf3)(value)) {
        return (0, TypedGeometryOneOf3_1.TypedGeometryOneOf3ToJSON)(value);
    }
    return {};
}
exports.TypedGeometryToJSON = TypedGeometryToJSON;
