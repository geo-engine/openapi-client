/* tslint:disable */
/* eslint-disable */
/**
 * Geo Engine API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.8.0
 * Contact: dev@geoengine.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { MlTensorShape3DFromJSON, MlTensorShape3DToJSON, } from './MlTensorShape3D';
import { RasterDataTypeFromJSON, RasterDataTypeToJSON, } from './RasterDataType';
/**
 * Check if a given object implements the MlModelMetadata interface.
 */
export function instanceOfMlModelMetadata(value) {
    if (!('fileName' in value) || value['fileName'] === undefined)
        return false;
    if (!('inputShape' in value) || value['inputShape'] === undefined)
        return false;
    if (!('inputType' in value) || value['inputType'] === undefined)
        return false;
    if (!('outputShape' in value) || value['outputShape'] === undefined)
        return false;
    if (!('outputType' in value) || value['outputType'] === undefined)
        return false;
    return true;
}
export function MlModelMetadataFromJSON(json) {
    return MlModelMetadataFromJSONTyped(json, false);
}
export function MlModelMetadataFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'fileName': json['fileName'],
        'inputShape': MlTensorShape3DFromJSON(json['inputShape']),
        'inputType': RasterDataTypeFromJSON(json['inputType']),
        'outputShape': MlTensorShape3DFromJSON(json['outputShape']),
        'outputType': RasterDataTypeFromJSON(json['outputType']),
    };
}
export function MlModelMetadataToJSON(json) {
    return MlModelMetadataToJSONTyped(json, false);
}
export function MlModelMetadataToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'fileName': value['fileName'],
        'inputShape': MlTensorShape3DToJSON(value['inputShape']),
        'inputType': RasterDataTypeToJSON(value['inputType']),
        'outputShape': MlTensorShape3DToJSON(value['outputShape']),
        'outputType': RasterDataTypeToJSON(value['outputType']),
    };
}
