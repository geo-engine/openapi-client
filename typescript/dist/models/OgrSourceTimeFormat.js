"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Geo Engine Pro API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.8.0
 * Contact: dev@geoengine.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.OgrSourceTimeFormatToJSON = exports.OgrSourceTimeFormatFromJSONTyped = exports.OgrSourceTimeFormatFromJSON = void 0;
const AutoOgrSourceTimeFormat_1 = require("./AutoOgrSourceTimeFormat");
const CustomOgrSourceTimeFormat_1 = require("./CustomOgrSourceTimeFormat");
const UnixTimeStampOgrSourceTimeFormat_1 = require("./UnixTimeStampOgrSourceTimeFormat");
function OgrSourceTimeFormatFromJSON(json) {
    return OgrSourceTimeFormatFromJSONTyped(json, false);
}
exports.OgrSourceTimeFormatFromJSON = OgrSourceTimeFormatFromJSON;
function OgrSourceTimeFormatFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    switch (json['format']) {
        case 'auto':
            return Object.assign(Object.assign({}, (0, AutoOgrSourceTimeFormat_1.AutoOgrSourceTimeFormatFromJSONTyped)(json, true)), { format: 'auto' });
        case 'custom':
            return Object.assign(Object.assign({}, (0, CustomOgrSourceTimeFormat_1.CustomOgrSourceTimeFormatFromJSONTyped)(json, true)), { format: 'custom' });
        case 'unixTimeStamp':
            return Object.assign(Object.assign({}, (0, UnixTimeStampOgrSourceTimeFormat_1.UnixTimeStampOgrSourceTimeFormatFromJSONTyped)(json, true)), { format: 'unixTimeStamp' });
        default:
            throw new Error(`No variant of OgrSourceTimeFormat exists with 'format=${json['format']}'`);
    }
}
exports.OgrSourceTimeFormatFromJSONTyped = OgrSourceTimeFormatFromJSONTyped;
function OgrSourceTimeFormatToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    switch (value['format']) {
        case 'auto':
            return (0, AutoOgrSourceTimeFormat_1.AutoOgrSourceTimeFormatToJSON)(value);
        case 'custom':
            return (0, CustomOgrSourceTimeFormat_1.CustomOgrSourceTimeFormatToJSON)(value);
        case 'unixTimeStamp':
            return (0, UnixTimeStampOgrSourceTimeFormat_1.UnixTimeStampOgrSourceTimeFormatToJSON)(value);
        default:
            throw new Error(`No variant of OgrSourceTimeFormat exists with 'format=${value['format']}'`);
    }
}
exports.OgrSourceTimeFormatToJSON = OgrSourceTimeFormatToJSON;
