/* tslint:disable */
/* eslint-disable */
/**
 * Geo Engine API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.9.0
 * Contact: dev@geoengine.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { SearchCapabilities } from './SearchCapabilities';
import {
    SearchCapabilitiesFromJSON,
    SearchCapabilitiesFromJSONTyped,
    SearchCapabilitiesToJSON,
    SearchCapabilitiesToJSONTyped,
} from './SearchCapabilities';

/**
 * 
 * @export
 * @interface ProviderCapabilities
 */
export interface ProviderCapabilities {
    /**
     * 
     * @type {boolean}
     * @memberof ProviderCapabilities
     */
    listing: boolean;
    /**
     * 
     * @type {SearchCapabilities}
     * @memberof ProviderCapabilities
     */
    search: SearchCapabilities;
}

/**
 * Check if a given object implements the ProviderCapabilities interface.
 */
export function instanceOfProviderCapabilities(value: object): value is ProviderCapabilities {
    if (!('listing' in value) || value['listing'] === undefined) return false;
    if (!('search' in value) || value['search'] === undefined) return false;
    return true;
}

export function ProviderCapabilitiesFromJSON(json: any): ProviderCapabilities {
    return ProviderCapabilitiesFromJSONTyped(json, false);
}

export function ProviderCapabilitiesFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProviderCapabilities {
    if (json == null) {
        return json;
    }
    return {
        
        'listing': json['listing'],
        'search': SearchCapabilitiesFromJSON(json['search']),
    };
}

export function ProviderCapabilitiesToJSON(json: any): ProviderCapabilities {
    return ProviderCapabilitiesToJSONTyped(json, false);
}

export function ProviderCapabilitiesToJSONTyped(value?: ProviderCapabilities | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'listing': value['listing'],
        'search': SearchCapabilitiesToJSON(value['search']),
    };
}

