/* tslint:disable */
/* eslint-disable */
/**
 * Geo Engine API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.9.0
 * Contact: dev@geoengine.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TaskFilter } from './TaskFilter';
import {
    TaskFilterFromJSON,
    TaskFilterFromJSONTyped,
    TaskFilterToJSON,
    TaskFilterToJSONTyped,
} from './TaskFilter';

/**
 * 
 * @export
 * @interface TaskListOptions
 */
export interface TaskListOptions {
    /**
     * 
     * @type {TaskFilter}
     * @memberof TaskListOptions
     */
    filter?: TaskFilter | null;
    /**
     * 
     * @type {number}
     * @memberof TaskListOptions
     */
    limit?: number;
    /**
     * 
     * @type {number}
     * @memberof TaskListOptions
     */
    offset?: number;
}



/**
 * Check if a given object implements the TaskListOptions interface.
 */
export function instanceOfTaskListOptions(value: object): value is TaskListOptions {
    return true;
}

export function TaskListOptionsFromJSON(json: any): TaskListOptions {
    return TaskListOptionsFromJSONTyped(json, false);
}

export function TaskListOptionsFromJSONTyped(json: any, ignoreDiscriminator: boolean): TaskListOptions {
    if (json == null) {
        return json;
    }
    return {
        
        'filter': json['filter'] == null ? undefined : TaskFilterFromJSON(json['filter']),
        'limit': json['limit'] == null ? undefined : json['limit'],
        'offset': json['offset'] == null ? undefined : json['offset'],
    };
}

export function TaskListOptionsToJSON(json: any): TaskListOptions {
    return TaskListOptionsToJSONTyped(json, false);
}

export function TaskListOptionsToJSONTyped(value?: TaskListOptions | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'filter': TaskFilterToJSON(value['filter']),
        'limit': value['limit'],
        'offset': value['offset'],
    };
}

