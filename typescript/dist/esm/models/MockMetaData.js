/* tslint:disable */
/* eslint-disable */
/**
 * Geo Engine API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.9.0
 * Contact: dev@geoengine.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { VectorResultDescriptorFromJSON, VectorResultDescriptorToJSON, } from './VectorResultDescriptor';
import { MockDatasetDataSourceLoadingInfoFromJSON, MockDatasetDataSourceLoadingInfoToJSON, } from './MockDatasetDataSourceLoadingInfo';
/**
 * @export
 */
export const MockMetaDataTypeEnum = {
    MockMetaData: 'MockMetaData'
};
/**
 * Check if a given object implements the MockMetaData interface.
 */
export function instanceOfMockMetaData(value) {
    if (!('loadingInfo' in value) || value['loadingInfo'] === undefined)
        return false;
    if (!('resultDescriptor' in value) || value['resultDescriptor'] === undefined)
        return false;
    if (!('type' in value) || value['type'] === undefined)
        return false;
    return true;
}
export function MockMetaDataFromJSON(json) {
    return MockMetaDataFromJSONTyped(json, false);
}
export function MockMetaDataFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'loadingInfo': MockDatasetDataSourceLoadingInfoFromJSON(json['loadingInfo']),
        'resultDescriptor': VectorResultDescriptorFromJSON(json['resultDescriptor']),
        'type': json['type'],
    };
}
export function MockMetaDataToJSON(json) {
    return MockMetaDataToJSONTyped(json, false);
}
export function MockMetaDataToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'loadingInfo': MockDatasetDataSourceLoadingInfoToJSON(value['loadingInfo']),
        'resultDescriptor': VectorResultDescriptorToJSON(value['resultDescriptor']),
        'type': value['type'],
    };
}
