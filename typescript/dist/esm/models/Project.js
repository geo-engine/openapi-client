/* tslint:disable */
/* eslint-disable */
/**
 * Geo Engine API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.9.0
 * Contact: dev@geoengine.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { TimeStepFromJSON, TimeStepToJSON, } from './TimeStep';
import { PlotFromJSON, PlotToJSON, } from './Plot';
import { ProjectVersionFromJSON, ProjectVersionToJSON, } from './ProjectVersion';
import { STRectangleFromJSON, STRectangleToJSON, } from './STRectangle';
import { ProjectLayerFromJSON, ProjectLayerToJSON, } from './ProjectLayer';
/**
 * Check if a given object implements the Project interface.
 */
export function instanceOfProject(value) {
    if (!('bounds' in value) || value['bounds'] === undefined)
        return false;
    if (!('description' in value) || value['description'] === undefined)
        return false;
    if (!('id' in value) || value['id'] === undefined)
        return false;
    if (!('layers' in value) || value['layers'] === undefined)
        return false;
    if (!('name' in value) || value['name'] === undefined)
        return false;
    if (!('plots' in value) || value['plots'] === undefined)
        return false;
    if (!('timeStep' in value) || value['timeStep'] === undefined)
        return false;
    if (!('version' in value) || value['version'] === undefined)
        return false;
    return true;
}
export function ProjectFromJSON(json) {
    return ProjectFromJSONTyped(json, false);
}
export function ProjectFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'bounds': STRectangleFromJSON(json['bounds']),
        'description': json['description'],
        'id': json['id'],
        'layers': (json['layers'].map(ProjectLayerFromJSON)),
        'name': json['name'],
        'plots': (json['plots'].map(PlotFromJSON)),
        'timeStep': TimeStepFromJSON(json['timeStep']),
        'version': ProjectVersionFromJSON(json['version']),
    };
}
export function ProjectToJSON(json) {
    return ProjectToJSONTyped(json, false);
}
export function ProjectToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'bounds': STRectangleToJSON(value['bounds']),
        'description': value['description'],
        'id': value['id'],
        'layers': (value['layers'].map(ProjectLayerToJSON)),
        'name': value['name'],
        'plots': (value['plots'].map(PlotToJSON)),
        'timeStep': TimeStepToJSON(value['timeStep']),
        'version': ProjectVersionToJSON(value['version']),
    };
}
