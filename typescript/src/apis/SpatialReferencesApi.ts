/* tslint:disable */
/* eslint-disable */
/**
 * Geo Engine Pro API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.8.0
 * Contact: dev@geoengine.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  SpatialReferenceSpecification,
} from '../models/index';
import {
    SpatialReferenceSpecificationFromJSON,
    SpatialReferenceSpecificationToJSON,
} from '../models/index';

export interface GetSpatialReferenceSpecificationHandlerRequest {
    srsString: string;
}

/**
 * 
 */
export class SpatialReferencesApi extends runtime.BaseAPI {

    /**
     */
    async getSpatialReferenceSpecificationHandlerRaw(requestParameters: GetSpatialReferenceSpecificationHandlerRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SpatialReferenceSpecification>> {
        if (requestParameters.srsString === null || requestParameters.srsString === undefined) {
            throw new runtime.RequiredError('srsString','Required parameter requestParameters.srsString was null or undefined when calling getSpatialReferenceSpecificationHandler.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("session_token", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/spatialReferenceSpecification/{srsString}`.replace(`{${"srsString"}}`, encodeURIComponent(String(requestParameters.srsString))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => SpatialReferenceSpecificationFromJSON(jsonValue));
    }

    /**
     */
    async getSpatialReferenceSpecificationHandler(requestParameters: GetSpatialReferenceSpecificationHandlerRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SpatialReferenceSpecification> {
        const response = await this.getSpatialReferenceSpecificationHandlerRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
