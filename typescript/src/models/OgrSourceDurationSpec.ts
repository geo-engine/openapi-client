/* tslint:disable */
/* eslint-disable */
/**
 * Geo Engine API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.8.0
 * Contact: dev@geoengine.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import {
    OgrSourceDurationSpecInfinite,
    instanceOfOgrSourceDurationSpecInfinite,
    OgrSourceDurationSpecInfiniteFromJSON,
    OgrSourceDurationSpecInfiniteFromJSONTyped,
    OgrSourceDurationSpecInfiniteToJSON,
} from './OgrSourceDurationSpecInfinite';
import {
    OgrSourceDurationSpecValue,
    instanceOfOgrSourceDurationSpecValue,
    OgrSourceDurationSpecValueFromJSON,
    OgrSourceDurationSpecValueFromJSONTyped,
    OgrSourceDurationSpecValueToJSON,
} from './OgrSourceDurationSpecValue';
import {
    OgrSourceDurationSpecZero,
    instanceOfOgrSourceDurationSpecZero,
    OgrSourceDurationSpecZeroFromJSON,
    OgrSourceDurationSpecZeroFromJSONTyped,
    OgrSourceDurationSpecZeroToJSON,
} from './OgrSourceDurationSpecZero';

/**
 * @type OgrSourceDurationSpec
 * 
 * @export
 */
export type OgrSourceDurationSpec = { type: 'infinite' } & OgrSourceDurationSpecInfinite | { type: 'value' } & OgrSourceDurationSpecValue | { type: 'zero' } & OgrSourceDurationSpecZero;

export function OgrSourceDurationSpecFromJSON(json: any): OgrSourceDurationSpec {
    return OgrSourceDurationSpecFromJSONTyped(json, false);
}

export function OgrSourceDurationSpecFromJSONTyped(json: any, ignoreDiscriminator: boolean): OgrSourceDurationSpec {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    switch (json['type']) {
        case 'infinite':
            return {...OgrSourceDurationSpecInfiniteFromJSONTyped(json, true), type: 'infinite'};
        case 'value':
            return {...OgrSourceDurationSpecValueFromJSONTyped(json, true), type: 'value'};
        case 'zero':
            return {...OgrSourceDurationSpecZeroFromJSONTyped(json, true), type: 'zero'};
        default:
            throw new Error(`No variant of OgrSourceDurationSpec exists with 'type=${json['type']}'`);
    }
}

export function OgrSourceDurationSpecToJSON(value?: OgrSourceDurationSpec | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    switch (value['type']) {
        case 'infinite':
            return OgrSourceDurationSpecInfiniteToJSON(value);
        case 'value':
            return OgrSourceDurationSpecValueToJSON(value);
        case 'zero':
            return OgrSourceDurationSpecZeroToJSON(value);
        default:
            throw new Error(`No variant of OgrSourceDurationSpec exists with 'type=${value['type']}'`);
    }

}

