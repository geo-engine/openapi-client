/* tslint:disable */
/* eslint-disable */
/**
 * Geo Engine API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.9.0
 * Contact: dev@geoengine.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { SearchTypes } from './SearchTypes';
import {
    SearchTypesFromJSON,
    SearchTypesFromJSONTyped,
    SearchTypesToJSON,
    SearchTypesToJSONTyped,
} from './SearchTypes';

/**
 * 
 * @export
 * @interface SearchCapabilities
 */
export interface SearchCapabilities {
    /**
     * 
     * @type {boolean}
     * @memberof SearchCapabilities
     */
    autocomplete: boolean;
    /**
     * 
     * @type {Array<string>}
     * @memberof SearchCapabilities
     */
    filters?: Array<string> | null;
    /**
     * 
     * @type {SearchTypes}
     * @memberof SearchCapabilities
     */
    searchTypes: SearchTypes;
}

/**
 * Check if a given object implements the SearchCapabilities interface.
 */
export function instanceOfSearchCapabilities(value: object): value is SearchCapabilities {
    if (!('autocomplete' in value) || value['autocomplete'] === undefined) return false;
    if (!('searchTypes' in value) || value['searchTypes'] === undefined) return false;
    return true;
}

export function SearchCapabilitiesFromJSON(json: any): SearchCapabilities {
    return SearchCapabilitiesFromJSONTyped(json, false);
}

export function SearchCapabilitiesFromJSONTyped(json: any, ignoreDiscriminator: boolean): SearchCapabilities {
    if (json == null) {
        return json;
    }
    return {
        
        'autocomplete': json['autocomplete'],
        'filters': json['filters'] == null ? undefined : json['filters'],
        'searchTypes': SearchTypesFromJSON(json['searchTypes']),
    };
}

export function SearchCapabilitiesToJSON(json: any): SearchCapabilities {
    return SearchCapabilitiesToJSONTyped(json, false);
}

export function SearchCapabilitiesToJSONTyped(value?: SearchCapabilities | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'autocomplete': value['autocomplete'],
        'filters': value['filters'],
        'searchTypes': SearchTypesToJSON(value['searchTypes']),
    };
}

