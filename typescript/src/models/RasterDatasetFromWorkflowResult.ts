/* tslint:disable */
/* eslint-disable */
/**
 * Geo Engine API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.9.0
 * Contact: dev@geoengine.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * response of the dataset from workflow handler
 * @export
 * @interface RasterDatasetFromWorkflowResult
 */
export interface RasterDatasetFromWorkflowResult {
    /**
     * 
     * @type {string}
     * @memberof RasterDatasetFromWorkflowResult
     */
    dataset: string;
    /**
     * 
     * @type {string}
     * @memberof RasterDatasetFromWorkflowResult
     */
    upload: string;
}

/**
 * Check if a given object implements the RasterDatasetFromWorkflowResult interface.
 */
export function instanceOfRasterDatasetFromWorkflowResult(value: object): value is RasterDatasetFromWorkflowResult {
    if (!('dataset' in value) || value['dataset'] === undefined) return false;
    if (!('upload' in value) || value['upload'] === undefined) return false;
    return true;
}

export function RasterDatasetFromWorkflowResultFromJSON(json: any): RasterDatasetFromWorkflowResult {
    return RasterDatasetFromWorkflowResultFromJSONTyped(json, false);
}

export function RasterDatasetFromWorkflowResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): RasterDatasetFromWorkflowResult {
    if (json == null) {
        return json;
    }
    return {
        
        'dataset': json['dataset'],
        'upload': json['upload'],
    };
}

export function RasterDatasetFromWorkflowResultToJSON(json: any): RasterDatasetFromWorkflowResult {
    return RasterDatasetFromWorkflowResultToJSONTyped(json, false);
}

export function RasterDatasetFromWorkflowResultToJSONTyped(value?: RasterDatasetFromWorkflowResult | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'dataset': value['dataset'],
        'upload': value['upload'],
    };
}

