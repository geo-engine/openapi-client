/* tslint:disable */
/* eslint-disable */
/**
 * Geo Engine API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.8.0
 * Contact: dev@geoengine.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { MlModelOutputNoDataHandling } from './MlModelOutputNoDataHandling';
import {
    MlModelOutputNoDataHandlingFromJSON,
    MlModelOutputNoDataHandlingFromJSONTyped,
    MlModelOutputNoDataHandlingToJSON,
    MlModelOutputNoDataHandlingToJSONTyped,
} from './MlModelOutputNoDataHandling';
import type { MlModelInputNoDataHandling } from './MlModelInputNoDataHandling';
import {
    MlModelInputNoDataHandlingFromJSON,
    MlModelInputNoDataHandlingFromJSONTyped,
    MlModelInputNoDataHandlingToJSON,
    MlModelInputNoDataHandlingToJSONTyped,
} from './MlModelInputNoDataHandling';
import type { MlTensorShape3D } from './MlTensorShape3D';
import {
    MlTensorShape3DFromJSON,
    MlTensorShape3DFromJSONTyped,
    MlTensorShape3DToJSON,
    MlTensorShape3DToJSONTyped,
} from './MlTensorShape3D';
import type { RasterDataType } from './RasterDataType';
import {
    RasterDataTypeFromJSON,
    RasterDataTypeFromJSONTyped,
    RasterDataTypeToJSON,
    RasterDataTypeToJSONTyped,
} from './RasterDataType';

/**
 * 
 * @export
 * @interface MlModelMetadata
 */
export interface MlModelMetadata {
    /**
     * 
     * @type {MlModelInputNoDataHandling}
     * @memberof MlModelMetadata
     */
    inputNoDataHandling: MlModelInputNoDataHandling;
    /**
     * 
     * @type {MlTensorShape3D}
     * @memberof MlModelMetadata
     */
    inputShape: MlTensorShape3D;
    /**
     * 
     * @type {RasterDataType}
     * @memberof MlModelMetadata
     */
    inputType: RasterDataType;
    /**
     * 
     * @type {MlModelOutputNoDataHandling}
     * @memberof MlModelMetadata
     */
    outputNoDataHandling: MlModelOutputNoDataHandling;
    /**
     * 
     * @type {MlTensorShape3D}
     * @memberof MlModelMetadata
     */
    outputShape: MlTensorShape3D;
    /**
     * 
     * @type {RasterDataType}
     * @memberof MlModelMetadata
     */
    outputType: RasterDataType;
}



/**
 * Check if a given object implements the MlModelMetadata interface.
 */
export function instanceOfMlModelMetadata(value: object): value is MlModelMetadata {
    if (!('inputNoDataHandling' in value) || value['inputNoDataHandling'] === undefined) return false;
    if (!('inputShape' in value) || value['inputShape'] === undefined) return false;
    if (!('inputType' in value) || value['inputType'] === undefined) return false;
    if (!('outputNoDataHandling' in value) || value['outputNoDataHandling'] === undefined) return false;
    if (!('outputShape' in value) || value['outputShape'] === undefined) return false;
    if (!('outputType' in value) || value['outputType'] === undefined) return false;
    return true;
}

export function MlModelMetadataFromJSON(json: any): MlModelMetadata {
    return MlModelMetadataFromJSONTyped(json, false);
}

export function MlModelMetadataFromJSONTyped(json: any, ignoreDiscriminator: boolean): MlModelMetadata {
    if (json == null) {
        return json;
    }
    return {
        
        'inputNoDataHandling': MlModelInputNoDataHandlingFromJSON(json['input_no_data_handling']),
        'inputShape': MlTensorShape3DFromJSON(json['input_shape']),
        'inputType': RasterDataTypeFromJSON(json['input_type']),
        'outputNoDataHandling': MlModelOutputNoDataHandlingFromJSON(json['output_no_data_handling']),
        'outputShape': MlTensorShape3DFromJSON(json['output_shape']),
        'outputType': RasterDataTypeFromJSON(json['output_type']),
    };
}

export function MlModelMetadataToJSON(json: any): MlModelMetadata {
    return MlModelMetadataToJSONTyped(json, false);
}

export function MlModelMetadataToJSONTyped(value?: MlModelMetadata | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'input_no_data_handling': MlModelInputNoDataHandlingToJSON(value['inputNoDataHandling']),
        'input_shape': MlTensorShape3DToJSON(value['inputShape']),
        'input_type': RasterDataTypeToJSON(value['inputType']),
        'output_no_data_handling': MlModelOutputNoDataHandlingToJSON(value['outputNoDataHandling']),
        'output_shape': MlTensorShape3DToJSON(value['outputShape']),
        'output_type': RasterDataTypeToJSON(value['outputType']),
    };
}

