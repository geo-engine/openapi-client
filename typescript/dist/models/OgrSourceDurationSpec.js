"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Geo Engine API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.9.0
 * Contact: dev@geoengine.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.OgrSourceDurationSpecFromJSON = OgrSourceDurationSpecFromJSON;
exports.OgrSourceDurationSpecFromJSONTyped = OgrSourceDurationSpecFromJSONTyped;
exports.OgrSourceDurationSpecToJSON = OgrSourceDurationSpecToJSON;
exports.OgrSourceDurationSpecToJSONTyped = OgrSourceDurationSpecToJSONTyped;
const OgrSourceDurationSpecInfinite_1 = require("./OgrSourceDurationSpecInfinite");
const OgrSourceDurationSpecValue_1 = require("./OgrSourceDurationSpecValue");
const OgrSourceDurationSpecZero_1 = require("./OgrSourceDurationSpecZero");
function OgrSourceDurationSpecFromJSON(json) {
    return OgrSourceDurationSpecFromJSONTyped(json, false);
}
function OgrSourceDurationSpecFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    switch (json['type']) {
        case 'infinite':
            return Object.assign({}, (0, OgrSourceDurationSpecInfinite_1.OgrSourceDurationSpecInfiniteFromJSONTyped)(json, true), { type: 'infinite' });
        case 'value':
            return Object.assign({}, (0, OgrSourceDurationSpecValue_1.OgrSourceDurationSpecValueFromJSONTyped)(json, true), { type: 'value' });
        case 'zero':
            return Object.assign({}, (0, OgrSourceDurationSpecZero_1.OgrSourceDurationSpecZeroFromJSONTyped)(json, true), { type: 'zero' });
        default:
            throw new Error(`No variant of OgrSourceDurationSpec exists with 'type=${json['type']}'`);
    }
}
function OgrSourceDurationSpecToJSON(json) {
    return OgrSourceDurationSpecToJSONTyped(json, false);
}
function OgrSourceDurationSpecToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    switch (value['type']) {
        case 'infinite':
            return Object.assign({}, (0, OgrSourceDurationSpecInfinite_1.OgrSourceDurationSpecInfiniteToJSON)(value), { type: 'infinite' });
        case 'value':
            return Object.assign({}, (0, OgrSourceDurationSpecValue_1.OgrSourceDurationSpecValueToJSON)(value), { type: 'value' });
        case 'zero':
            return Object.assign({}, (0, OgrSourceDurationSpecZero_1.OgrSourceDurationSpecZeroToJSON)(value), { type: 'zero' });
        default:
            throw new Error(`No variant of OgrSourceDurationSpec exists with 'type=${value['type']}'`);
    }
}
