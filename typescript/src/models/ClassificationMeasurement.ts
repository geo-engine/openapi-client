/* tslint:disable */
/* eslint-disable */
/**
 * Geo Engine API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.9.0
 * Contact: dev@geoengine.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ClassificationMeasurement
 */
export interface ClassificationMeasurement {
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof ClassificationMeasurement
     */
    classes: { [key: string]: string; };
    /**
     * 
     * @type {string}
     * @memberof ClassificationMeasurement
     */
    measurement: string;
    /**
     * 
     * @type {string}
     * @memberof ClassificationMeasurement
     */
    type: ClassificationMeasurementTypeEnum;
}


/**
 * @export
 */
export const ClassificationMeasurementTypeEnum = {
    Classification: 'classification'
} as const;
export type ClassificationMeasurementTypeEnum = typeof ClassificationMeasurementTypeEnum[keyof typeof ClassificationMeasurementTypeEnum];


/**
 * Check if a given object implements the ClassificationMeasurement interface.
 */
export function instanceOfClassificationMeasurement(value: object): value is ClassificationMeasurement {
    if (!('classes' in value) || value['classes'] === undefined) return false;
    if (!('measurement' in value) || value['measurement'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    return true;
}

export function ClassificationMeasurementFromJSON(json: any): ClassificationMeasurement {
    return ClassificationMeasurementFromJSONTyped(json, false);
}

export function ClassificationMeasurementFromJSONTyped(json: any, ignoreDiscriminator: boolean): ClassificationMeasurement {
    if (json == null) {
        return json;
    }
    return {
        
        'classes': json['classes'],
        'measurement': json['measurement'],
        'type': json['type'],
    };
}

export function ClassificationMeasurementToJSON(json: any): ClassificationMeasurement {
    return ClassificationMeasurementToJSONTyped(json, false);
}

export function ClassificationMeasurementToJSONTyped(value?: ClassificationMeasurement | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'classes': value['classes'],
        'measurement': value['measurement'],
        'type': value['type'],
    };
}

