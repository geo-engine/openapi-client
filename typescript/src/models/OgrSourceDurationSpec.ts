/* tslint:disable */
/* eslint-disable */
/**
 * Geo Engine Pro API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.8.0
 * Contact: dev@geoengine.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import {
    InfiniteOgrSourceDurationSpec,
    instanceOfInfiniteOgrSourceDurationSpec,
    InfiniteOgrSourceDurationSpecFromJSON,
    InfiniteOgrSourceDurationSpecFromJSONTyped,
    InfiniteOgrSourceDurationSpecToJSON,
} from './InfiniteOgrSourceDurationSpec';
import {
    TimeStepWithType,
    instanceOfTimeStepWithType,
    TimeStepWithTypeFromJSON,
    TimeStepWithTypeFromJSONTyped,
    TimeStepWithTypeToJSON,
} from './TimeStepWithType';
import {
    ZeroOgrSourceDurationSpec,
    instanceOfZeroOgrSourceDurationSpec,
    ZeroOgrSourceDurationSpecFromJSON,
    ZeroOgrSourceDurationSpecFromJSONTyped,
    ZeroOgrSourceDurationSpecToJSON,
} from './ZeroOgrSourceDurationSpec';

/**
 * @type OgrSourceDurationSpec
 * 
 * @export
 */
export type OgrSourceDurationSpec = { type: 'infinite' } & InfiniteOgrSourceDurationSpec | { type: 'value' } & TimeStepWithType | { type: 'zero' } & ZeroOgrSourceDurationSpec;

export function OgrSourceDurationSpecFromJSON(json: any): OgrSourceDurationSpec {
    return OgrSourceDurationSpecFromJSONTyped(json, false);
}

export function OgrSourceDurationSpecFromJSONTyped(json: any, ignoreDiscriminator: boolean): OgrSourceDurationSpec {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    switch (json['type']) {
        case 'infinite':
            return {...InfiniteOgrSourceDurationSpecFromJSONTyped(json, true), type: 'infinite'};
        case 'value':
            return {...TimeStepWithTypeFromJSONTyped(json, true), type: 'value'};
        case 'zero':
            return {...ZeroOgrSourceDurationSpecFromJSONTyped(json, true), type: 'zero'};
        default:
            throw new Error(`No variant of OgrSourceDurationSpec exists with 'type=${json['type']}'`);
    }
}

export function OgrSourceDurationSpecToJSON(value?: OgrSourceDurationSpec | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    switch (value['type']) {
        case 'infinite':
            return InfiniteOgrSourceDurationSpecToJSON(value);
        case 'value':
            return TimeStepWithTypeToJSON(value);
        case 'zero':
            return ZeroOgrSourceDurationSpecToJSON(value);
        default:
            throw new Error(`No variant of OgrSourceDurationSpec exists with 'type=${value['type']}'`);
    }

}

