"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Geo Engine API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.8.0
 * Contact: dev@geoengine.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfStacBand = instanceOfStacBand;
exports.StacBandFromJSON = StacBandFromJSON;
exports.StacBandFromJSONTyped = StacBandFromJSONTyped;
exports.StacBandToJSON = StacBandToJSON;
exports.StacBandToJSONTyped = StacBandToJSONTyped;
const RasterDataType_1 = require("./RasterDataType");
/**
 * Check if a given object implements the StacBand interface.
 */
function instanceOfStacBand(value) {
    if (!('dataType' in value) || value['dataType'] === undefined)
        return false;
    if (!('name' in value) || value['name'] === undefined)
        return false;
    return true;
}
function StacBandFromJSON(json) {
    return StacBandFromJSONTyped(json, false);
}
function StacBandFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'dataType': (0, RasterDataType_1.RasterDataTypeFromJSON)(json['dataType']),
        'name': json['name'],
        'noDataValue': json['noDataValue'] == null ? undefined : json['noDataValue'],
    };
}
function StacBandToJSON(json) {
    return StacBandToJSONTyped(json, false);
}
function StacBandToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'dataType': (0, RasterDataType_1.RasterDataTypeToJSON)(value['dataType']),
        'name': value['name'],
        'noDataValue': value['noDataValue'],
    };
}
