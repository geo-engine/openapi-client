/* tslint:disable */
/* eslint-disable */
/**
 * Geo Engine Pro API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.8.0
 * Contact: dev@geoengine.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import {
    NoneOgrSourceDatasetTimeType,
    instanceOfNoneOgrSourceDatasetTimeType,
    NoneOgrSourceDatasetTimeTypeFromJSON,
    NoneOgrSourceDatasetTimeTypeFromJSONTyped,
    NoneOgrSourceDatasetTimeTypeToJSON,
} from './NoneOgrSourceDatasetTimeType';
import {
    StartDurationOgrSourceDatasetTimeType,
    instanceOfStartDurationOgrSourceDatasetTimeType,
    StartDurationOgrSourceDatasetTimeTypeFromJSON,
    StartDurationOgrSourceDatasetTimeTypeFromJSONTyped,
    StartDurationOgrSourceDatasetTimeTypeToJSON,
} from './StartDurationOgrSourceDatasetTimeType';
import {
    StartEndOgrSourceDatasetTimeType,
    instanceOfStartEndOgrSourceDatasetTimeType,
    StartEndOgrSourceDatasetTimeTypeFromJSON,
    StartEndOgrSourceDatasetTimeTypeFromJSONTyped,
    StartEndOgrSourceDatasetTimeTypeToJSON,
} from './StartEndOgrSourceDatasetTimeType';
import {
    StartOgrSourceDatasetTimeType,
    instanceOfStartOgrSourceDatasetTimeType,
    StartOgrSourceDatasetTimeTypeFromJSON,
    StartOgrSourceDatasetTimeTypeFromJSONTyped,
    StartOgrSourceDatasetTimeTypeToJSON,
} from './StartOgrSourceDatasetTimeType';

/**
 * @type OgrSourceDatasetTimeType
 * 
 * @export
 */
export type OgrSourceDatasetTimeType = { type: 'none' } & NoneOgrSourceDatasetTimeType | { type: 'start' } & StartOgrSourceDatasetTimeType | { type: 'startDuration' } & StartDurationOgrSourceDatasetTimeType | { type: 'startEnd' } & StartEndOgrSourceDatasetTimeType;

export function OgrSourceDatasetTimeTypeFromJSON(json: any): OgrSourceDatasetTimeType {
    return OgrSourceDatasetTimeTypeFromJSONTyped(json, false);
}

export function OgrSourceDatasetTimeTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): OgrSourceDatasetTimeType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    switch (json['type']) {
        case 'none':
            return {...NoneOgrSourceDatasetTimeTypeFromJSONTyped(json, true), type: 'none'};
        case 'start':
            return {...StartOgrSourceDatasetTimeTypeFromJSONTyped(json, true), type: 'start'};
        case 'startDuration':
            return {...StartDurationOgrSourceDatasetTimeTypeFromJSONTyped(json, true), type: 'startDuration'};
        case 'startEnd':
            return {...StartEndOgrSourceDatasetTimeTypeFromJSONTyped(json, true), type: 'startEnd'};
        default:
            throw new Error(`No variant of OgrSourceDatasetTimeType exists with 'type=${json['type']}'`);
    }
}

export function OgrSourceDatasetTimeTypeToJSON(value?: OgrSourceDatasetTimeType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    switch (value['type']) {
        case 'none':
            return NoneOgrSourceDatasetTimeTypeToJSON(value);
        case 'start':
            return StartOgrSourceDatasetTimeTypeToJSON(value);
        case 'startDuration':
            return StartDurationOgrSourceDatasetTimeTypeToJSON(value);
        case 'startEnd':
            return StartEndOgrSourceDatasetTimeTypeToJSON(value);
        default:
            throw new Error(`No variant of OgrSourceDatasetTimeType exists with 'type=${value['type']}'`);
    }

}

