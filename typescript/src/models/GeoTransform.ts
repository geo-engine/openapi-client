/* tslint:disable */
/* eslint-disable */
/**
 * Geo Engine Pro API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.8.0
 * Contact: dev@geoengine.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Coordinate2D } from './Coordinate2D';
import {
    Coordinate2DFromJSON,
    Coordinate2DFromJSONTyped,
    Coordinate2DToJSON,
} from './Coordinate2D';

/**
 * 
 * @export
 * @interface GeoTransform
 */
export interface GeoTransform {
    /**
     * 
     * @type {Coordinate2D}
     * @memberof GeoTransform
     */
    originCoordinate: Coordinate2D;
    /**
     * 
     * @type {number}
     * @memberof GeoTransform
     */
    xPixelSize: number;
    /**
     * 
     * @type {number}
     * @memberof GeoTransform
     */
    yPixelSize: number;
}

/**
 * Check if a given object implements the GeoTransform interface.
 */
export function instanceOfGeoTransform(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "originCoordinate" in value;
    isInstance = isInstance && "xPixelSize" in value;
    isInstance = isInstance && "yPixelSize" in value;

    return isInstance;
}

export function GeoTransformFromJSON(json: any): GeoTransform {
    return GeoTransformFromJSONTyped(json, false);
}

export function GeoTransformFromJSONTyped(json: any, ignoreDiscriminator: boolean): GeoTransform {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'originCoordinate': Coordinate2DFromJSON(json['originCoordinate']),
        'xPixelSize': json['xPixelSize'],
        'yPixelSize': json['yPixelSize'],
    };
}

export function GeoTransformToJSON(value?: GeoTransform | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'originCoordinate': Coordinate2DToJSON(value.originCoordinate),
        'xPixelSize': value.xPixelSize,
        'yPixelSize': value.yPixelSize,
    };
}

