/* tslint:disable */
/* eslint-disable */
/**
 * Geo Engine Pro API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.8.0
 * Contact: dev@geoengine.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { BoundingBox2D } from './BoundingBox2D';
import {
    BoundingBox2DFromJSON,
    BoundingBox2DFromJSONTyped,
    BoundingBox2DToJSON,
} from './BoundingBox2D';
import type { TimeInterval } from './TimeInterval';
import {
    TimeIntervalFromJSON,
    TimeIntervalFromJSONTyped,
    TimeIntervalToJSON,
} from './TimeInterval';

/**
 * A `ResultDescriptor` for plot queries
 * @export
 * @interface PlotResultDescriptor
 */
export interface PlotResultDescriptor {
    /**
     * 
     * @type {BoundingBox2D}
     * @memberof PlotResultDescriptor
     */
    bbox?: BoundingBox2D | null;
    /**
     * 
     * @type {string}
     * @memberof PlotResultDescriptor
     */
    spatialReference: string;
    /**
     * 
     * @type {TimeInterval}
     * @memberof PlotResultDescriptor
     */
    time?: TimeInterval | null;
}

/**
 * Check if a given object implements the PlotResultDescriptor interface.
 */
export function instanceOfPlotResultDescriptor(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "spatialReference" in value;

    return isInstance;
}

export function PlotResultDescriptorFromJSON(json: any): PlotResultDescriptor {
    return PlotResultDescriptorFromJSONTyped(json, false);
}

export function PlotResultDescriptorFromJSONTyped(json: any, ignoreDiscriminator: boolean): PlotResultDescriptor {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'bbox': !exists(json, 'bbox') ? undefined : BoundingBox2DFromJSON(json['bbox']),
        'spatialReference': json['spatialReference'],
        'time': !exists(json, 'time') ? undefined : TimeIntervalFromJSON(json['time']),
    };
}

export function PlotResultDescriptorToJSON(value?: PlotResultDescriptor | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'bbox': BoundingBox2DToJSON(value.bbox),
        'spatialReference': value.spatialReference,
        'time': TimeIntervalToJSON(value.time),
    };
}

