"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Geo Engine API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.9.0
 * Contact: dev@geoengine.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.SpatialReferenceAuthority = void 0;
exports.instanceOfSpatialReferenceAuthority = instanceOfSpatialReferenceAuthority;
exports.SpatialReferenceAuthorityFromJSON = SpatialReferenceAuthorityFromJSON;
exports.SpatialReferenceAuthorityFromJSONTyped = SpatialReferenceAuthorityFromJSONTyped;
exports.SpatialReferenceAuthorityToJSON = SpatialReferenceAuthorityToJSON;
exports.SpatialReferenceAuthorityToJSONTyped = SpatialReferenceAuthorityToJSONTyped;
/**
 * A spatial reference authority that is part of a spatial reference definition
 * @export
 */
exports.SpatialReferenceAuthority = {
    Epsg: 'EPSG',
    SrOrg: 'SR-ORG',
    Iau2000: 'IAU2000',
    Esri: 'ESRI'
};
function instanceOfSpatialReferenceAuthority(value) {
    for (const key in exports.SpatialReferenceAuthority) {
        if (Object.prototype.hasOwnProperty.call(exports.SpatialReferenceAuthority, key)) {
            if (exports.SpatialReferenceAuthority[key] === value) {
                return true;
            }
        }
    }
    return false;
}
function SpatialReferenceAuthorityFromJSON(json) {
    return SpatialReferenceAuthorityFromJSONTyped(json, false);
}
function SpatialReferenceAuthorityFromJSONTyped(json, ignoreDiscriminator) {
    return json;
}
function SpatialReferenceAuthorityToJSON(value) {
    return value;
}
function SpatialReferenceAuthorityToJSONTyped(value, ignoreDiscriminator) {
    return value;
}
