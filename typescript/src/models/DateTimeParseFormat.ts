/* tslint:disable */
/* eslint-disable */
/**
 * Geo Engine Pro API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.8.0
 * Contact: dev@geoengine.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface DateTimeParseFormat
 */
export interface DateTimeParseFormat {
    /**
     * 
     * @type {string}
     * @memberof DateTimeParseFormat
     */
    fmt: string;
    /**
     * 
     * @type {boolean}
     * @memberof DateTimeParseFormat
     */
    hasTime: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof DateTimeParseFormat
     */
    hasTz: boolean;
}

/**
 * Check if a given object implements the DateTimeParseFormat interface.
 */
export function instanceOfDateTimeParseFormat(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "fmt" in value;
    isInstance = isInstance && "hasTime" in value;
    isInstance = isInstance && "hasTz" in value;

    return isInstance;
}

export function DateTimeParseFormatFromJSON(json: any): DateTimeParseFormat {
    return DateTimeParseFormatFromJSONTyped(json, false);
}

export function DateTimeParseFormatFromJSONTyped(json: any, ignoreDiscriminator: boolean): DateTimeParseFormat {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'fmt': json['fmt'],
        'hasTime': json['has_time'],
        'hasTz': json['has_tz'],
    };
}

export function DateTimeParseFormatToJSON(value?: DateTimeParseFormat | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'fmt': value.fmt,
        'has_time': value.hasTime,
        'has_tz': value.hasTz,
    };
}

