/* tslint:disable */
/* eslint-disable */
/**
 * Geo Engine API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.8.0
 * Contact: dev@geoengine.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CopernicusDataspaceDataProviderDefinition
 */
export interface CopernicusDataspaceDataProviderDefinition {
    /**
     * 
     * @type {string}
     * @memberof CopernicusDataspaceDataProviderDefinition
     */
    description: string;
    /**
     * 
     * @type {Array<Array<string>>}
     * @memberof CopernicusDataspaceDataProviderDefinition
     */
    gdalConfig: Array<Array<string>>;
    /**
     * 
     * @type {string}
     * @memberof CopernicusDataspaceDataProviderDefinition
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof CopernicusDataspaceDataProviderDefinition
     */
    name: string;
    /**
     * 
     * @type {number}
     * @memberof CopernicusDataspaceDataProviderDefinition
     */
    priority?: number | null;
    /**
     * 
     * @type {string}
     * @memberof CopernicusDataspaceDataProviderDefinition
     */
    s3AccessKey: string;
    /**
     * 
     * @type {string}
     * @memberof CopernicusDataspaceDataProviderDefinition
     */
    s3SecretKey: string;
    /**
     * 
     * @type {string}
     * @memberof CopernicusDataspaceDataProviderDefinition
     */
    s3Url: string;
    /**
     * 
     * @type {string}
     * @memberof CopernicusDataspaceDataProviderDefinition
     */
    stacUrl: string;
    /**
     * 
     * @type {string}
     * @memberof CopernicusDataspaceDataProviderDefinition
     */
    type: CopernicusDataspaceDataProviderDefinitionTypeEnum;
}


/**
 * @export
 */
export const CopernicusDataspaceDataProviderDefinitionTypeEnum = {
    CopernicusDataspace: 'CopernicusDataspace'
} as const;
export type CopernicusDataspaceDataProviderDefinitionTypeEnum = typeof CopernicusDataspaceDataProviderDefinitionTypeEnum[keyof typeof CopernicusDataspaceDataProviderDefinitionTypeEnum];


/**
 * Check if a given object implements the CopernicusDataspaceDataProviderDefinition interface.
 */
export function instanceOfCopernicusDataspaceDataProviderDefinition(value: object): value is CopernicusDataspaceDataProviderDefinition {
    if (!('description' in value) || value['description'] === undefined) return false;
    if (!('gdalConfig' in value) || value['gdalConfig'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('s3AccessKey' in value) || value['s3AccessKey'] === undefined) return false;
    if (!('s3SecretKey' in value) || value['s3SecretKey'] === undefined) return false;
    if (!('s3Url' in value) || value['s3Url'] === undefined) return false;
    if (!('stacUrl' in value) || value['stacUrl'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    return true;
}

export function CopernicusDataspaceDataProviderDefinitionFromJSON(json: any): CopernicusDataspaceDataProviderDefinition {
    return CopernicusDataspaceDataProviderDefinitionFromJSONTyped(json, false);
}

export function CopernicusDataspaceDataProviderDefinitionFromJSONTyped(json: any, ignoreDiscriminator: boolean): CopernicusDataspaceDataProviderDefinition {
    if (json == null) {
        return json;
    }
    return {
        
        'description': json['description'],
        'gdalConfig': json['gdalConfig'],
        'id': json['id'],
        'name': json['name'],
        'priority': json['priority'] == null ? undefined : json['priority'],
        's3AccessKey': json['s3AccessKey'],
        's3SecretKey': json['s3SecretKey'],
        's3Url': json['s3Url'],
        'stacUrl': json['stacUrl'],
        'type': json['type'],
    };
}

export function CopernicusDataspaceDataProviderDefinitionToJSON(json: any): CopernicusDataspaceDataProviderDefinition {
    return CopernicusDataspaceDataProviderDefinitionToJSONTyped(json, false);
}

export function CopernicusDataspaceDataProviderDefinitionToJSONTyped(value?: CopernicusDataspaceDataProviderDefinition | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'description': value['description'],
        'gdalConfig': value['gdalConfig'],
        'id': value['id'],
        'name': value['name'],
        'priority': value['priority'],
        's3AccessKey': value['s3AccessKey'],
        's3SecretKey': value['s3SecretKey'],
        's3Url': value['s3Url'],
        'stacUrl': value['stacUrl'],
        'type': value['type'],
    };
}

