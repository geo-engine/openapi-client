"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Geo Engine API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.9.0
 * Contact: dev@geoengine.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.OgrSourceDatasetTimeTypeStartDurationTypeEnum = void 0;
exports.instanceOfOgrSourceDatasetTimeTypeStartDuration = instanceOfOgrSourceDatasetTimeTypeStartDuration;
exports.OgrSourceDatasetTimeTypeStartDurationFromJSON = OgrSourceDatasetTimeTypeStartDurationFromJSON;
exports.OgrSourceDatasetTimeTypeStartDurationFromJSONTyped = OgrSourceDatasetTimeTypeStartDurationFromJSONTyped;
exports.OgrSourceDatasetTimeTypeStartDurationToJSON = OgrSourceDatasetTimeTypeStartDurationToJSON;
exports.OgrSourceDatasetTimeTypeStartDurationToJSONTyped = OgrSourceDatasetTimeTypeStartDurationToJSONTyped;
const OgrSourceTimeFormat_1 = require("./OgrSourceTimeFormat");
/**
 * @export
 */
exports.OgrSourceDatasetTimeTypeStartDurationTypeEnum = {
    Startduration: 'start+duration'
};
/**
 * Check if a given object implements the OgrSourceDatasetTimeTypeStartDuration interface.
 */
function instanceOfOgrSourceDatasetTimeTypeStartDuration(value) {
    if (!('durationField' in value) || value['durationField'] === undefined)
        return false;
    if (!('startField' in value) || value['startField'] === undefined)
        return false;
    if (!('startFormat' in value) || value['startFormat'] === undefined)
        return false;
    if (!('type' in value) || value['type'] === undefined)
        return false;
    return true;
}
function OgrSourceDatasetTimeTypeStartDurationFromJSON(json) {
    return OgrSourceDatasetTimeTypeStartDurationFromJSONTyped(json, false);
}
function OgrSourceDatasetTimeTypeStartDurationFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'durationField': json['durationField'],
        'startField': json['startField'],
        'startFormat': (0, OgrSourceTimeFormat_1.OgrSourceTimeFormatFromJSON)(json['startFormat']),
        'type': json['type'],
    };
}
function OgrSourceDatasetTimeTypeStartDurationToJSON(json) {
    return OgrSourceDatasetTimeTypeStartDurationToJSONTyped(json, false);
}
function OgrSourceDatasetTimeTypeStartDurationToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'durationField': value['durationField'],
        'startField': value['startField'],
        'startFormat': (0, OgrSourceTimeFormat_1.OgrSourceTimeFormatToJSON)(value['startFormat']),
        'type': value['type'],
    };
}
