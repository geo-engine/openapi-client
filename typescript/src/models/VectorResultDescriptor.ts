/* tslint:disable */
/* eslint-disable */
/**
 * Geo Engine API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.9.0
 * Contact: dev@geoengine.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { VectorDataType } from './VectorDataType';
import {
    VectorDataTypeFromJSON,
    VectorDataTypeFromJSONTyped,
    VectorDataTypeToJSON,
    VectorDataTypeToJSONTyped,
} from './VectorDataType';
import type { TimeInterval } from './TimeInterval';
import {
    TimeIntervalFromJSON,
    TimeIntervalFromJSONTyped,
    TimeIntervalToJSON,
    TimeIntervalToJSONTyped,
} from './TimeInterval';
import type { VectorColumnInfo } from './VectorColumnInfo';
import {
    VectorColumnInfoFromJSON,
    VectorColumnInfoFromJSONTyped,
    VectorColumnInfoToJSON,
    VectorColumnInfoToJSONTyped,
} from './VectorColumnInfo';
import type { BoundingBox2D } from './BoundingBox2D';
import {
    BoundingBox2DFromJSON,
    BoundingBox2DFromJSONTyped,
    BoundingBox2DToJSON,
    BoundingBox2DToJSONTyped,
} from './BoundingBox2D';

/**
 * 
 * @export
 * @interface VectorResultDescriptor
 */
export interface VectorResultDescriptor {
    /**
     * 
     * @type {BoundingBox2D}
     * @memberof VectorResultDescriptor
     */
    bbox?: BoundingBox2D | null;
    /**
     * 
     * @type {{ [key: string]: VectorColumnInfo; }}
     * @memberof VectorResultDescriptor
     */
    columns: { [key: string]: VectorColumnInfo; };
    /**
     * 
     * @type {VectorDataType}
     * @memberof VectorResultDescriptor
     */
    dataType: VectorDataType;
    /**
     * 
     * @type {string}
     * @memberof VectorResultDescriptor
     */
    spatialReference: string;
    /**
     * 
     * @type {TimeInterval}
     * @memberof VectorResultDescriptor
     */
    time?: TimeInterval | null;
}



/**
 * Check if a given object implements the VectorResultDescriptor interface.
 */
export function instanceOfVectorResultDescriptor(value: object): value is VectorResultDescriptor {
    if (!('columns' in value) || value['columns'] === undefined) return false;
    if (!('dataType' in value) || value['dataType'] === undefined) return false;
    if (!('spatialReference' in value) || value['spatialReference'] === undefined) return false;
    return true;
}

export function VectorResultDescriptorFromJSON(json: any): VectorResultDescriptor {
    return VectorResultDescriptorFromJSONTyped(json, false);
}

export function VectorResultDescriptorFromJSONTyped(json: any, ignoreDiscriminator: boolean): VectorResultDescriptor {
    if (json == null) {
        return json;
    }
    return {
        
        'bbox': json['bbox'] == null ? undefined : BoundingBox2DFromJSON(json['bbox']),
        'columns': (mapValues(json['columns'], VectorColumnInfoFromJSON)),
        'dataType': VectorDataTypeFromJSON(json['dataType']),
        'spatialReference': json['spatialReference'],
        'time': json['time'] == null ? undefined : TimeIntervalFromJSON(json['time']),
    };
}

export function VectorResultDescriptorToJSON(json: any): VectorResultDescriptor {
    return VectorResultDescriptorToJSONTyped(json, false);
}

export function VectorResultDescriptorToJSONTyped(value?: VectorResultDescriptor | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'bbox': BoundingBox2DToJSON(value['bbox']),
        'columns': (mapValues(value['columns'], VectorColumnInfoToJSON)),
        'dataType': VectorDataTypeToJSON(value['dataType']),
        'spatialReference': value['spatialReference'],
        'time': TimeIntervalToJSON(value['time']),
    };
}

