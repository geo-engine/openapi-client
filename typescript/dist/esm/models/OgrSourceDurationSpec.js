/* tslint:disable */
/* eslint-disable */
/**
 * Geo Engine Pro API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.7.0
 * Contact: dev@geoengine.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { InfiniteOgrSourceDurationSpecFromJSONTyped, InfiniteOgrSourceDurationSpecToJSON, } from './InfiniteOgrSourceDurationSpec';
import { TimeStepWithTypeFromJSONTyped, TimeStepWithTypeToJSON, } from './TimeStepWithType';
import { ZeroOgrSourceDurationSpecFromJSONTyped, ZeroOgrSourceDurationSpecToJSON, } from './ZeroOgrSourceDurationSpec';
export function OgrSourceDurationSpecFromJSON(json) {
    return OgrSourceDurationSpecFromJSONTyped(json, false);
}
export function OgrSourceDurationSpecFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    switch (json['type']) {
        case 'infinite':
            return Object.assign(Object.assign({}, InfiniteOgrSourceDurationSpecFromJSONTyped(json, true)), { type: 'infinite' });
        case 'value':
            return Object.assign(Object.assign({}, TimeStepWithTypeFromJSONTyped(json, true)), { type: 'value' });
        case 'zero':
            return Object.assign(Object.assign({}, ZeroOgrSourceDurationSpecFromJSONTyped(json, true)), { type: 'zero' });
        default:
            throw new Error(`No variant of OgrSourceDurationSpec exists with 'type=${json['type']}'`);
    }
}
export function OgrSourceDurationSpecToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    switch (value['type']) {
        case 'infinite':
            return InfiniteOgrSourceDurationSpecToJSON(value);
        case 'value':
            return TimeStepWithTypeToJSON(value);
        case 'zero':
            return ZeroOgrSourceDurationSpecToJSON(value);
        default:
            throw new Error(`No variant of OgrSourceDurationSpec exists with 'type=${value['type']}'`);
    }
}
