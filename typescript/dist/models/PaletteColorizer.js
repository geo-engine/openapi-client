"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Geo Engine API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.8.0
 * Contact: dev@geoengine.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.PaletteColorizerToJSONTyped = exports.PaletteColorizerToJSON = exports.PaletteColorizerFromJSONTyped = exports.PaletteColorizerFromJSON = exports.instanceOfPaletteColorizer = exports.PaletteColorizerTypeEnum = void 0;
/**
 * @export
 */
exports.PaletteColorizerTypeEnum = {
    Palette: 'palette'
};
/**
 * Check if a given object implements the PaletteColorizer interface.
 */
function instanceOfPaletteColorizer(value) {
    if (!('colors' in value) || value['colors'] === undefined)
        return false;
    if (!('defaultColor' in value) || value['defaultColor'] === undefined)
        return false;
    if (!('noDataColor' in value) || value['noDataColor'] === undefined)
        return false;
    if (!('type' in value) || value['type'] === undefined)
        return false;
    return true;
}
exports.instanceOfPaletteColorizer = instanceOfPaletteColorizer;
function PaletteColorizerFromJSON(json) {
    return PaletteColorizerFromJSONTyped(json, false);
}
exports.PaletteColorizerFromJSON = PaletteColorizerFromJSON;
function PaletteColorizerFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'colors': json['colors'],
        'defaultColor': json['defaultColor'],
        'noDataColor': json['noDataColor'],
        'type': json['type'],
    };
}
exports.PaletteColorizerFromJSONTyped = PaletteColorizerFromJSONTyped;
function PaletteColorizerToJSON(json) {
    return PaletteColorizerToJSONTyped(json, false);
}
exports.PaletteColorizerToJSON = PaletteColorizerToJSON;
function PaletteColorizerToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'colors': value['colors'],
        'defaultColor': value['defaultColor'],
        'noDataColor': value['noDataColor'],
        'type': value['type'],
    };
}
exports.PaletteColorizerToJSONTyped = PaletteColorizerToJSONTyped;
