/* tslint:disable */
/* eslint-disable */
/**
 * Geo Engine Pro API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.7.0
 * Contact: dev@geoengine.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { exists } from '../runtime';
import { ProviderLayerCollectionIdFromJSON, ProviderLayerCollectionIdToJSON, } from './ProviderLayerCollectionId';
/**
 * @export
 */
export const LayerCollectionListingWithTypeTypeEnum = {
    Collection: 'collection',
    Layer: 'layer'
};
/**
 * Check if a given object implements the LayerCollectionListingWithType interface.
 */
export function instanceOfLayerCollectionListingWithType(value) {
    let isInstance = true;
    isInstance = isInstance && "description" in value;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "type" in value;
    return isInstance;
}
export function LayerCollectionListingWithTypeFromJSON(json) {
    return LayerCollectionListingWithTypeFromJSONTyped(json, false);
}
export function LayerCollectionListingWithTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'description': json['description'],
        'id': ProviderLayerCollectionIdFromJSON(json['id']),
        'name': json['name'],
        'properties': !exists(json, 'properties') ? undefined : json['properties'],
        'type': json['type'],
    };
}
export function LayerCollectionListingWithTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'description': value.description,
        'id': ProviderLayerCollectionIdToJSON(value.id),
        'name': value.name,
        'properties': value.properties,
        'type': value.type,
    };
}
