/* tslint:disable */
/* eslint-disable */
/**
 * Geo Engine API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.9.0
 * Contact: dev@geoengine.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface WildliveDataConnectorDefinition
 */
export interface WildliveDataConnectorDefinition {
    /**
     * 
     * @type {string}
     * @memberof WildliveDataConnectorDefinition
     */
    apiKey?: string | null;
    /**
     * 
     * @type {string}
     * @memberof WildliveDataConnectorDefinition
     */
    description: string;
    /**
     * 
     * @type {string}
     * @memberof WildliveDataConnectorDefinition
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof WildliveDataConnectorDefinition
     */
    name: string;
    /**
     * 
     * @type {number}
     * @memberof WildliveDataConnectorDefinition
     */
    priority?: number | null;
    /**
     * 
     * @type {string}
     * @memberof WildliveDataConnectorDefinition
     */
    type: WildliveDataConnectorDefinitionTypeEnum;
}


/**
 * @export
 */
export const WildliveDataConnectorDefinitionTypeEnum = {
    WildLive: 'WildLIVE!'
} as const;
export type WildliveDataConnectorDefinitionTypeEnum = typeof WildliveDataConnectorDefinitionTypeEnum[keyof typeof WildliveDataConnectorDefinitionTypeEnum];


/**
 * Check if a given object implements the WildliveDataConnectorDefinition interface.
 */
export function instanceOfWildliveDataConnectorDefinition(value: object): value is WildliveDataConnectorDefinition {
    if (!('description' in value) || value['description'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    return true;
}

export function WildliveDataConnectorDefinitionFromJSON(json: any): WildliveDataConnectorDefinition {
    return WildliveDataConnectorDefinitionFromJSONTyped(json, false);
}

export function WildliveDataConnectorDefinitionFromJSONTyped(json: any, ignoreDiscriminator: boolean): WildliveDataConnectorDefinition {
    if (json == null) {
        return json;
    }
    return {
        
        'apiKey': json['apiKey'] == null ? undefined : json['apiKey'],
        'description': json['description'],
        'id': json['id'],
        'name': json['name'],
        'priority': json['priority'] == null ? undefined : json['priority'],
        'type': json['type'],
    };
}

export function WildliveDataConnectorDefinitionToJSON(json: any): WildliveDataConnectorDefinition {
    return WildliveDataConnectorDefinitionToJSONTyped(json, false);
}

export function WildliveDataConnectorDefinitionToJSONTyped(value?: WildliveDataConnectorDefinition | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'apiKey': value['apiKey'],
        'description': value['description'],
        'id': value['id'],
        'name': value['name'],
        'priority': value['priority'],
        'type': value['type'],
    };
}

