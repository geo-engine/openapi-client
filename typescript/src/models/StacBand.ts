/* tslint:disable */
/* eslint-disable */
/**
 * Geo Engine API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.8.0
 * Contact: dev@geoengine.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { RasterDataType } from './RasterDataType';
import {
    RasterDataTypeFromJSON,
    RasterDataTypeFromJSONTyped,
    RasterDataTypeToJSON,
    RasterDataTypeToJSONTyped,
} from './RasterDataType';

/**
 * 
 * @export
 * @interface StacBand
 */
export interface StacBand {
    /**
     * 
     * @type {RasterDataType}
     * @memberof StacBand
     */
    dataType: RasterDataType;
    /**
     * 
     * @type {string}
     * @memberof StacBand
     */
    name: string;
    /**
     * 
     * @type {number}
     * @memberof StacBand
     */
    noDataValue?: number | null;
}



/**
 * Check if a given object implements the StacBand interface.
 */
export function instanceOfStacBand(value: object): value is StacBand {
    if (!('dataType' in value) || value['dataType'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    return true;
}

export function StacBandFromJSON(json: any): StacBand {
    return StacBandFromJSONTyped(json, false);
}

export function StacBandFromJSONTyped(json: any, ignoreDiscriminator: boolean): StacBand {
    if (json == null) {
        return json;
    }
    return {
        
        'dataType': RasterDataTypeFromJSON(json['dataType']),
        'name': json['name'],
        'noDataValue': json['noDataValue'] == null ? undefined : json['noDataValue'],
    };
}

export function StacBandToJSON(json: any): StacBand {
    return StacBandToJSONTyped(json, false);
}

export function StacBandToJSONTyped(value?: StacBand | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'dataType': RasterDataTypeToJSON(value['dataType']),
        'name': value['name'],
        'noDataValue': value['noDataValue'],
    };
}

