"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Geo Engine API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.9.0
 * Contact: dev@geoengine.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfMlModel = instanceOfMlModel;
exports.MlModelFromJSON = MlModelFromJSON;
exports.MlModelFromJSONTyped = MlModelFromJSONTyped;
exports.MlModelToJSON = MlModelToJSON;
exports.MlModelToJSONTyped = MlModelToJSONTyped;
const MlModelMetadata_1 = require("./MlModelMetadata");
/**
 * Check if a given object implements the MlModel interface.
 */
function instanceOfMlModel(value) {
    if (!('description' in value) || value['description'] === undefined)
        return false;
    if (!('displayName' in value) || value['displayName'] === undefined)
        return false;
    if (!('fileName' in value) || value['fileName'] === undefined)
        return false;
    if (!('metadata' in value) || value['metadata'] === undefined)
        return false;
    if (!('name' in value) || value['name'] === undefined)
        return false;
    if (!('upload' in value) || value['upload'] === undefined)
        return false;
    return true;
}
function MlModelFromJSON(json) {
    return MlModelFromJSONTyped(json, false);
}
function MlModelFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'description': json['description'],
        'displayName': json['displayName'],
        'fileName': json['fileName'],
        'metadata': (0, MlModelMetadata_1.MlModelMetadataFromJSON)(json['metadata']),
        'name': json['name'],
        'upload': json['upload'],
    };
}
function MlModelToJSON(json) {
    return MlModelToJSONTyped(json, false);
}
function MlModelToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'description': value['description'],
        'displayName': value['displayName'],
        'fileName': value['fileName'],
        'metadata': (0, MlModelMetadata_1.MlModelMetadataToJSON)(value['metadata']),
        'name': value['name'],
        'upload': value['upload'],
    };
}
