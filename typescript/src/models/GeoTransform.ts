/* tslint:disable */
/* eslint-disable */
/**
 * Geo Engine API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.8.0
 * Contact: dev@geoengine.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Coordinate2D } from './Coordinate2D';
import {
    Coordinate2DFromJSON,
    Coordinate2DFromJSONTyped,
    Coordinate2DToJSON,
    Coordinate2DToJSONTyped,
} from './Coordinate2D';

/**
 * 
 * @export
 * @interface GeoTransform
 */
export interface GeoTransform {
    /**
     * 
     * @type {Coordinate2D}
     * @memberof GeoTransform
     */
    originCoordinate: Coordinate2D;
    /**
     * 
     * @type {number}
     * @memberof GeoTransform
     */
    xPixelSize: number;
    /**
     * 
     * @type {number}
     * @memberof GeoTransform
     */
    yPixelSize: number;
}

/**
 * Check if a given object implements the GeoTransform interface.
 */
export function instanceOfGeoTransform(value: object): value is GeoTransform {
    if (!('originCoordinate' in value) || value['originCoordinate'] === undefined) return false;
    if (!('xPixelSize' in value) || value['xPixelSize'] === undefined) return false;
    if (!('yPixelSize' in value) || value['yPixelSize'] === undefined) return false;
    return true;
}

export function GeoTransformFromJSON(json: any): GeoTransform {
    return GeoTransformFromJSONTyped(json, false);
}

export function GeoTransformFromJSONTyped(json: any, ignoreDiscriminator: boolean): GeoTransform {
    if (json == null) {
        return json;
    }
    return {
        
        'originCoordinate': Coordinate2DFromJSON(json['originCoordinate']),
        'xPixelSize': json['xPixelSize'],
        'yPixelSize': json['yPixelSize'],
    };
}

export function GeoTransformToJSON(json: any): GeoTransform {
    return GeoTransformToJSONTyped(json, false);
}

export function GeoTransformToJSONTyped(value?: GeoTransform | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'originCoordinate': Coordinate2DToJSON(value['originCoordinate']),
        'xPixelSize': value['xPixelSize'],
        'yPixelSize': value['yPixelSize'],
    };
}

