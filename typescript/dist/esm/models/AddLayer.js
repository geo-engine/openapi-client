/* tslint:disable */
/* eslint-disable */
/**
 * Geo Engine API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.9.0
 * Contact: dev@geoengine.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { SymbologyFromJSON, SymbologyToJSON, } from './Symbology';
import { WorkflowFromJSON, WorkflowToJSON, } from './Workflow';
/**
 * Check if a given object implements the AddLayer interface.
 */
export function instanceOfAddLayer(value) {
    if (!('description' in value) || value['description'] === undefined)
        return false;
    if (!('name' in value) || value['name'] === undefined)
        return false;
    if (!('workflow' in value) || value['workflow'] === undefined)
        return false;
    return true;
}
export function AddLayerFromJSON(json) {
    return AddLayerFromJSONTyped(json, false);
}
export function AddLayerFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'description': json['description'],
        'metadata': json['metadata'] == null ? undefined : json['metadata'],
        'name': json['name'],
        'properties': json['properties'] == null ? undefined : json['properties'],
        'symbology': json['symbology'] == null ? undefined : SymbologyFromJSON(json['symbology']),
        'workflow': WorkflowFromJSON(json['workflow']),
    };
}
export function AddLayerToJSON(json) {
    return AddLayerToJSONTyped(json, false);
}
export function AddLayerToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'description': value['description'],
        'metadata': value['metadata'],
        'name': value['name'],
        'properties': value['properties'],
        'symbology': SymbologyToJSON(value['symbology']),
        'workflow': WorkflowToJSON(value['workflow']),
    };
}
