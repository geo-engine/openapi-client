/* tslint:disable */
/* eslint-disable */
/**
 * Geo Engine Pro API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.7.0
 * Contact: dev@geoengine.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
import * as runtime from '../runtime';
import { ServerInfoFromJSON, } from '../models/index';
/**
 *
 */
export class GeneralApi extends runtime.BaseAPI {
    /**
     * Server availablity check.
     * Server availablity check.
     */
    availableHandlerRaw(initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const queryParameters = {};
            const headerParameters = {};
            const response = yield this.request({
                path: `/available`,
                method: 'GET',
                headers: headerParameters,
                query: queryParameters,
            }, initOverrides);
            return new runtime.VoidApiResponse(response);
        });
    }
    /**
     * Server availablity check.
     * Server availablity check.
     */
    availableHandler(initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.availableHandlerRaw(initOverrides);
        });
    }
    /**
     * Shows information about the server software version.
     * Shows information about the server software version.
     */
    serverInfoHandlerRaw(initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const queryParameters = {};
            const headerParameters = {};
            const response = yield this.request({
                path: `/info`,
                method: 'GET',
                headers: headerParameters,
                query: queryParameters,
            }, initOverrides);
            return new runtime.JSONApiResponse(response, (jsonValue) => ServerInfoFromJSON(jsonValue));
        });
    }
    /**
     * Shows information about the server software version.
     * Shows information about the server software version.
     */
    serverInfoHandler(initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.serverInfoHandlerRaw(initOverrides);
            return yield response.value();
        });
    }
}
