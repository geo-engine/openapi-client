/* tslint:disable */
/* eslint-disable */
/**
 * Geo Engine API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.9.0
 * Contact: dev@geoengine.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Coordinate2D } from './Coordinate2D';
import {
    Coordinate2DFromJSON,
    Coordinate2DFromJSONTyped,
    Coordinate2DToJSON,
    Coordinate2DToJSONTyped,
} from './Coordinate2D';

/**
 * A bounding box that includes all border points.
 * Note: may degenerate to a point!
 * @export
 * @interface BoundingBox2D
 */
export interface BoundingBox2D {
    /**
     * 
     * @type {Coordinate2D}
     * @memberof BoundingBox2D
     */
    lowerLeftCoordinate: Coordinate2D;
    /**
     * 
     * @type {Coordinate2D}
     * @memberof BoundingBox2D
     */
    upperRightCoordinate: Coordinate2D;
}

/**
 * Check if a given object implements the BoundingBox2D interface.
 */
export function instanceOfBoundingBox2D(value: object): value is BoundingBox2D {
    if (!('lowerLeftCoordinate' in value) || value['lowerLeftCoordinate'] === undefined) return false;
    if (!('upperRightCoordinate' in value) || value['upperRightCoordinate'] === undefined) return false;
    return true;
}

export function BoundingBox2DFromJSON(json: any): BoundingBox2D {
    return BoundingBox2DFromJSONTyped(json, false);
}

export function BoundingBox2DFromJSONTyped(json: any, ignoreDiscriminator: boolean): BoundingBox2D {
    if (json == null) {
        return json;
    }
    return {
        
        'lowerLeftCoordinate': Coordinate2DFromJSON(json['lowerLeftCoordinate']),
        'upperRightCoordinate': Coordinate2DFromJSON(json['upperRightCoordinate']),
    };
}

export function BoundingBox2DToJSON(json: any): BoundingBox2D {
    return BoundingBox2DToJSONTyped(json, false);
}

export function BoundingBox2DToJSONTyped(value?: BoundingBox2D | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'lowerLeftCoordinate': Coordinate2DToJSON(value['lowerLeftCoordinate']),
        'upperRightCoordinate': Coordinate2DToJSON(value['upperRightCoordinate']),
    };
}

