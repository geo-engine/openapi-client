/* tslint:disable */
/* eslint-disable */
/**
 * Geo Engine Pro API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.8.0
 * Contact: dev@geoengine.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import {
    TypedGeometryOneOf,
    instanceOfTypedGeometryOneOf,
    TypedGeometryOneOfFromJSON,
    TypedGeometryOneOfFromJSONTyped,
    TypedGeometryOneOfToJSON,
} from './TypedGeometryOneOf';
import {
    TypedGeometryOneOf1,
    instanceOfTypedGeometryOneOf1,
    TypedGeometryOneOf1FromJSON,
    TypedGeometryOneOf1FromJSONTyped,
    TypedGeometryOneOf1ToJSON,
} from './TypedGeometryOneOf1';
import {
    TypedGeometryOneOf2,
    instanceOfTypedGeometryOneOf2,
    TypedGeometryOneOf2FromJSON,
    TypedGeometryOneOf2FromJSONTyped,
    TypedGeometryOneOf2ToJSON,
} from './TypedGeometryOneOf2';
import {
    TypedGeometryOneOf3,
    instanceOfTypedGeometryOneOf3,
    TypedGeometryOneOf3FromJSON,
    TypedGeometryOneOf3FromJSONTyped,
    TypedGeometryOneOf3ToJSON,
} from './TypedGeometryOneOf3';

/**
 * @type TypedGeometry
 * 
 * @export
 */
export type TypedGeometry = TypedGeometryOneOf | TypedGeometryOneOf1 | TypedGeometryOneOf2 | TypedGeometryOneOf3;

export function TypedGeometryFromJSON(json: any): TypedGeometry {
    return TypedGeometryFromJSONTyped(json, false);
}

export function TypedGeometryFromJSONTyped(json: any, ignoreDiscriminator: boolean): TypedGeometry {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return { ...TypedGeometryOneOfFromJSONTyped(json, true), ...TypedGeometryOneOf1FromJSONTyped(json, true), ...TypedGeometryOneOf2FromJSONTyped(json, true), ...TypedGeometryOneOf3FromJSONTyped(json, true) };
}

export function TypedGeometryToJSON(value?: TypedGeometry | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }

    if (instanceOfTypedGeometryOneOf(value)) {
        return TypedGeometryOneOfToJSON(value as TypedGeometryOneOf);
    }
    if (instanceOfTypedGeometryOneOf1(value)) {
        return TypedGeometryOneOf1ToJSON(value as TypedGeometryOneOf1);
    }
    if (instanceOfTypedGeometryOneOf2(value)) {
        return TypedGeometryOneOf2ToJSON(value as TypedGeometryOneOf2);
    }
    if (instanceOfTypedGeometryOneOf3(value)) {
        return TypedGeometryOneOf3ToJSON(value as TypedGeometryOneOf3);
    }

    return {};
}

