/* tslint:disable */
/* eslint-disable */
/**
 * Geo Engine API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.9.0
 * Contact: dev@geoengine.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Colorizer } from './Colorizer';
import {
    ColorizerFromJSON,
    ColorizerFromJSONTyped,
    ColorizerToJSON,
    ColorizerToJSONTyped,
} from './Colorizer';

/**
 * 
 * @export
 * @interface SingleBandRasterColorizer
 */
export interface SingleBandRasterColorizer {
    /**
     * 
     * @type {number}
     * @memberof SingleBandRasterColorizer
     */
    band: number;
    /**
     * 
     * @type {Colorizer}
     * @memberof SingleBandRasterColorizer
     */
    bandColorizer: Colorizer;
    /**
     * 
     * @type {string}
     * @memberof SingleBandRasterColorizer
     */
    type: SingleBandRasterColorizerTypeEnum;
}


/**
 * @export
 */
export const SingleBandRasterColorizerTypeEnum = {
    SingleBand: 'singleBand'
} as const;
export type SingleBandRasterColorizerTypeEnum = typeof SingleBandRasterColorizerTypeEnum[keyof typeof SingleBandRasterColorizerTypeEnum];


/**
 * Check if a given object implements the SingleBandRasterColorizer interface.
 */
export function instanceOfSingleBandRasterColorizer(value: object): value is SingleBandRasterColorizer {
    if (!('band' in value) || value['band'] === undefined) return false;
    if (!('bandColorizer' in value) || value['bandColorizer'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    return true;
}

export function SingleBandRasterColorizerFromJSON(json: any): SingleBandRasterColorizer {
    return SingleBandRasterColorizerFromJSONTyped(json, false);
}

export function SingleBandRasterColorizerFromJSONTyped(json: any, ignoreDiscriminator: boolean): SingleBandRasterColorizer {
    if (json == null) {
        return json;
    }
    return {
        
        'band': json['band'],
        'bandColorizer': ColorizerFromJSON(json['bandColorizer']),
        'type': json['type'],
    };
}

export function SingleBandRasterColorizerToJSON(json: any): SingleBandRasterColorizer {
    return SingleBandRasterColorizerToJSONTyped(json, false);
}

export function SingleBandRasterColorizerToJSONTyped(value?: SingleBandRasterColorizer | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'band': value['band'],
        'bandColorizer': ColorizerToJSON(value['bandColorizer']),
        'type': value['type'],
    };
}

