/* tslint:disable */
/* eslint-disable */
/**
 * Geo Engine API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.8.0
 * Contact: dev@geoengine.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import {
    DerivedNumber,
    instanceOfDerivedNumber,
    DerivedNumberFromJSON,
    DerivedNumberFromJSONTyped,
    DerivedNumberToJSON,
} from './DerivedNumber';
import {
    StaticNumberParam,
    instanceOfStaticNumberParam,
    StaticNumberParamFromJSON,
    StaticNumberParamFromJSONTyped,
    StaticNumberParamToJSON,
} from './StaticNumberParam';

/**
 * @type NumberParam
 * 
 * @export
 */
export type NumberParam = { type: 'derived' } & DerivedNumber | { type: 'static' } & StaticNumberParam;

export function NumberParamFromJSON(json: any): NumberParam {
    return NumberParamFromJSONTyped(json, false);
}

export function NumberParamFromJSONTyped(json: any, ignoreDiscriminator: boolean): NumberParam {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    switch (json['type']) {
        case 'derived':
            return {...DerivedNumberFromJSONTyped(json, true), type: 'derived'};
        case 'static':
            return {...StaticNumberParamFromJSONTyped(json, true), type: 'static'};
        default:
            throw new Error(`No variant of NumberParam exists with 'type=${json['type']}'`);
    }
}

export function NumberParamToJSON(value?: NumberParam | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    switch (value['type']) {
        case 'derived':
            return DerivedNumberToJSON(value);
        case 'static':
            return StaticNumberParamToJSON(value);
        default:
            throw new Error(`No variant of NumberParam exists with 'type=${value['type']}'`);
    }

}

