/* tslint:disable */
/* eslint-disable */
/**
 * Geo Engine Pro API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.8.0
 * Contact: dev@geoengine.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { PlotFromJSON, PlotToJSON, } from './Plot';
import { ProjectLayerFromJSON, ProjectLayerToJSON, } from './ProjectLayer';
import { ProjectVersionFromJSON, ProjectVersionToJSON, } from './ProjectVersion';
import { STRectangleFromJSON, STRectangleToJSON, } from './STRectangle';
import { TimeStepFromJSON, TimeStepToJSON, } from './TimeStep';
/**
 * Check if a given object implements the Project interface.
 */
export function instanceOfProject(value) {
    let isInstance = true;
    isInstance = isInstance && "bounds" in value;
    isInstance = isInstance && "description" in value;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "layers" in value;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "plots" in value;
    isInstance = isInstance && "timeStep" in value;
    isInstance = isInstance && "version" in value;
    return isInstance;
}
export function ProjectFromJSON(json) {
    return ProjectFromJSONTyped(json, false);
}
export function ProjectFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'bounds': STRectangleFromJSON(json['bounds']),
        'description': json['description'],
        'id': json['id'],
        'layers': (json['layers'].map(ProjectLayerFromJSON)),
        'name': json['name'],
        'plots': (json['plots'].map(PlotFromJSON)),
        'timeStep': TimeStepFromJSON(json['timeStep']),
        'version': ProjectVersionFromJSON(json['version']),
    };
}
export function ProjectToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'bounds': STRectangleToJSON(value.bounds),
        'description': value.description,
        'id': value.id,
        'layers': (value.layers.map(ProjectLayerToJSON)),
        'name': value.name,
        'plots': (value.plots.map(PlotToJSON)),
        'timeStep': TimeStepToJSON(value.timeStep),
        'version': ProjectVersionToJSON(value.version),
    };
}
