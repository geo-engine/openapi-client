"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Geo Engine API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.9.0
 * Contact: dev@geoengine.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfUserSession = instanceOfUserSession;
exports.UserSessionFromJSON = UserSessionFromJSON;
exports.UserSessionFromJSONTyped = UserSessionFromJSONTyped;
exports.UserSessionToJSON = UserSessionToJSON;
exports.UserSessionToJSONTyped = UserSessionToJSONTyped;
const STRectangle_1 = require("./STRectangle");
const UserInfo_1 = require("./UserInfo");
/**
 * Check if a given object implements the UserSession interface.
 */
function instanceOfUserSession(value) {
    if (!('created' in value) || value['created'] === undefined)
        return false;
    if (!('id' in value) || value['id'] === undefined)
        return false;
    if (!('roles' in value) || value['roles'] === undefined)
        return false;
    if (!('user' in value) || value['user'] === undefined)
        return false;
    if (!('validUntil' in value) || value['validUntil'] === undefined)
        return false;
    return true;
}
function UserSessionFromJSON(json) {
    return UserSessionFromJSONTyped(json, false);
}
function UserSessionFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'created': (new Date(json['created'])),
        'id': json['id'],
        'project': json['project'] == null ? undefined : json['project'],
        'roles': json['roles'],
        'user': (0, UserInfo_1.UserInfoFromJSON)(json['user']),
        'validUntil': (new Date(json['validUntil'])),
        'view': json['view'] == null ? undefined : (0, STRectangle_1.STRectangleFromJSON)(json['view']),
    };
}
function UserSessionToJSON(json) {
    return UserSessionToJSONTyped(json, false);
}
function UserSessionToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'created': ((value['created']).toISOString()),
        'id': value['id'],
        'project': value['project'],
        'roles': value['roles'],
        'user': (0, UserInfo_1.UserInfoToJSON)(value['user']),
        'validUntil': ((value['validUntil']).toISOString()),
        'view': (0, STRectangle_1.STRectangleToJSON)(value['view']),
    };
}
