/* tslint:disable */
/* eslint-disable */
/**
 * Geo Engine API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.9.0
 * Contact: dev@geoengine.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TimeStep } from './TimeStep';
import {
    TimeStepFromJSON,
    TimeStepFromJSONTyped,
    TimeStepToJSON,
    TimeStepToJSONTyped,
} from './TimeStep';
import type { TimeGranularity } from './TimeGranularity';
import {
    TimeGranularityFromJSON,
    TimeGranularityFromJSONTyped,
    TimeGranularityToJSON,
    TimeGranularityToJSONTyped,
} from './TimeGranularity';

/**
 * 
 * @export
 * @interface OgrSourceDurationSpecValue
 */
export interface OgrSourceDurationSpecValue extends TimeStep {
    /**
     * 
     * @type {string}
     * @memberof OgrSourceDurationSpecValue
     */
    type: OgrSourceDurationSpecValueTypeEnum;
}


/**
 * @export
 */
export const OgrSourceDurationSpecValueTypeEnum = {
    Value: 'value'
} as const;
export type OgrSourceDurationSpecValueTypeEnum = typeof OgrSourceDurationSpecValueTypeEnum[keyof typeof OgrSourceDurationSpecValueTypeEnum];


/**
 * Check if a given object implements the OgrSourceDurationSpecValue interface.
 */
export function instanceOfOgrSourceDurationSpecValue(value: object): value is OgrSourceDurationSpecValue {
    if (!('type' in value) || value['type'] === undefined) return false;
    return true;
}

export function OgrSourceDurationSpecValueFromJSON(json: any): OgrSourceDurationSpecValue {
    return OgrSourceDurationSpecValueFromJSONTyped(json, false);
}

export function OgrSourceDurationSpecValueFromJSONTyped(json: any, ignoreDiscriminator: boolean): OgrSourceDurationSpecValue {
    if (json == null) {
        return json;
    }
    return {
        ...TimeStepFromJSONTyped(json, true),
        'type': json['type'],
    };
}

export function OgrSourceDurationSpecValueToJSON(json: any): OgrSourceDurationSpecValue {
    return OgrSourceDurationSpecValueToJSONTyped(json, false);
}

export function OgrSourceDurationSpecValueToJSONTyped(value?: OgrSourceDurationSpecValue | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        ...TimeStepToJSONTyped(value, true),
        'type': value['type'],
    };
}

