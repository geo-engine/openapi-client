/* tslint:disable */
/* eslint-disable */
/**
 * Geo Engine API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.9.0
 * Contact: dev@geoengine.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Provenance
 */
export interface Provenance {
    /**
     * 
     * @type {string}
     * @memberof Provenance
     */
    citation: string;
    /**
     * 
     * @type {string}
     * @memberof Provenance
     */
    license: string;
    /**
     * 
     * @type {string}
     * @memberof Provenance
     */
    uri: string;
}

/**
 * Check if a given object implements the Provenance interface.
 */
export function instanceOfProvenance(value: object): value is Provenance {
    if (!('citation' in value) || value['citation'] === undefined) return false;
    if (!('license' in value) || value['license'] === undefined) return false;
    if (!('uri' in value) || value['uri'] === undefined) return false;
    return true;
}

export function ProvenanceFromJSON(json: any): Provenance {
    return ProvenanceFromJSONTyped(json, false);
}

export function ProvenanceFromJSONTyped(json: any, ignoreDiscriminator: boolean): Provenance {
    if (json == null) {
        return json;
    }
    return {
        
        'citation': json['citation'],
        'license': json['license'],
        'uri': json['uri'],
    };
}

export function ProvenanceToJSON(json: any): Provenance {
    return ProvenanceToJSONTyped(json, false);
}

export function ProvenanceToJSONTyped(value?: Provenance | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'citation': value['citation'],
        'license': value['license'],
        'uri': value['uri'],
    };
}

