"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Geo Engine API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.9.0
 * Contact: dev@geoengine.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfProvenanceEntry = instanceOfProvenanceEntry;
exports.ProvenanceEntryFromJSON = ProvenanceEntryFromJSON;
exports.ProvenanceEntryFromJSONTyped = ProvenanceEntryFromJSONTyped;
exports.ProvenanceEntryToJSON = ProvenanceEntryToJSON;
exports.ProvenanceEntryToJSONTyped = ProvenanceEntryToJSONTyped;
const Provenance_1 = require("./Provenance");
const DataId_1 = require("./DataId");
/**
 * Check if a given object implements the ProvenanceEntry interface.
 */
function instanceOfProvenanceEntry(value) {
    if (!('data' in value) || value['data'] === undefined)
        return false;
    if (!('provenance' in value) || value['provenance'] === undefined)
        return false;
    return true;
}
function ProvenanceEntryFromJSON(json) {
    return ProvenanceEntryFromJSONTyped(json, false);
}
function ProvenanceEntryFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'data': (json['data'].map(DataId_1.DataIdFromJSON)),
        'provenance': (0, Provenance_1.ProvenanceFromJSON)(json['provenance']),
    };
}
function ProvenanceEntryToJSON(json) {
    return ProvenanceEntryToJSONTyped(json, false);
}
function ProvenanceEntryToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'data': (value['data'].map(DataId_1.DataIdToJSON)),
        'provenance': (0, Provenance_1.ProvenanceToJSON)(value['provenance']),
    };
}
