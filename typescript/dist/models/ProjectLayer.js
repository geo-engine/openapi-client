"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Geo Engine Pro API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.7.0
 * Contact: dev@geoengine.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ProjectLayerToJSON = exports.ProjectLayerFromJSONTyped = exports.ProjectLayerFromJSON = exports.instanceOfProjectLayer = void 0;
const LayerVisibility_1 = require("./LayerVisibility");
const Symbology_1 = require("./Symbology");
/**
 * Check if a given object implements the ProjectLayer interface.
 */
function instanceOfProjectLayer(value) {
    let isInstance = true;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "symbology" in value;
    isInstance = isInstance && "visibility" in value;
    isInstance = isInstance && "workflow" in value;
    return isInstance;
}
exports.instanceOfProjectLayer = instanceOfProjectLayer;
function ProjectLayerFromJSON(json) {
    return ProjectLayerFromJSONTyped(json, false);
}
exports.ProjectLayerFromJSON = ProjectLayerFromJSON;
function ProjectLayerFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'name': json['name'],
        'symbology': (0, Symbology_1.SymbologyFromJSON)(json['symbology']),
        'visibility': (0, LayerVisibility_1.LayerVisibilityFromJSON)(json['visibility']),
        'workflow': json['workflow'],
    };
}
exports.ProjectLayerFromJSONTyped = ProjectLayerFromJSONTyped;
function ProjectLayerToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'name': value.name,
        'symbology': (0, Symbology_1.SymbologyToJSON)(value.symbology),
        'visibility': (0, LayerVisibility_1.LayerVisibilityToJSON)(value.visibility),
        'workflow': value.workflow,
    };
}
exports.ProjectLayerToJSON = ProjectLayerToJSON;
