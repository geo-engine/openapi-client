"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Geo Engine API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.8.0
 * Contact: dev@geoengine.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.TaskStatusRunningToJSONTyped = exports.TaskStatusRunningToJSON = exports.TaskStatusRunningFromJSONTyped = exports.TaskStatusRunningFromJSON = exports.instanceOfTaskStatusRunning = exports.TaskStatusRunningStatusEnum = void 0;
/**
 * @export
 */
exports.TaskStatusRunningStatusEnum = {
    Running: 'running'
};
/**
 * Check if a given object implements the TaskStatusRunning interface.
 */
function instanceOfTaskStatusRunning(value) {
    if (!('estimatedTimeRemaining' in value) || value['estimatedTimeRemaining'] === undefined)
        return false;
    if (!('pctComplete' in value) || value['pctComplete'] === undefined)
        return false;
    if (!('status' in value) || value['status'] === undefined)
        return false;
    if (!('taskType' in value) || value['taskType'] === undefined)
        return false;
    if (!('timeStarted' in value) || value['timeStarted'] === undefined)
        return false;
    return true;
}
exports.instanceOfTaskStatusRunning = instanceOfTaskStatusRunning;
function TaskStatusRunningFromJSON(json) {
    return TaskStatusRunningFromJSONTyped(json, false);
}
exports.TaskStatusRunningFromJSON = TaskStatusRunningFromJSON;
function TaskStatusRunningFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'description': json['description'] == null ? undefined : json['description'],
        'estimatedTimeRemaining': json['estimatedTimeRemaining'],
        'info': json['info'] == null ? undefined : json['info'],
        'pctComplete': json['pctComplete'],
        'status': json['status'],
        'taskType': json['taskType'],
        'timeStarted': json['timeStarted'],
    };
}
exports.TaskStatusRunningFromJSONTyped = TaskStatusRunningFromJSONTyped;
function TaskStatusRunningToJSON(json) {
    return TaskStatusRunningToJSONTyped(json, false);
}
exports.TaskStatusRunningToJSON = TaskStatusRunningToJSON;
function TaskStatusRunningToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'description': value['description'],
        'estimatedTimeRemaining': value['estimatedTimeRemaining'],
        'info': value['info'],
        'pctComplete': value['pctComplete'],
        'status': value['status'],
        'taskType': value['taskType'],
        'timeStarted': value['timeStarted'],
    };
}
exports.TaskStatusRunningToJSONTyped = TaskStatusRunningToJSONTyped;
