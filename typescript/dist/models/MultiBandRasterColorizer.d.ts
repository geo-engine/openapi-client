/**
 * Geo Engine Pro API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.8.0
 * Contact: dev@geoengine.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface MultiBandRasterColorizer
 */
export interface MultiBandRasterColorizer {
    /**
     * The band index of the blue channel.
     * @type {number}
     * @memberof MultiBandRasterColorizer
     */
    blueBand: number;
    /**
     * The maximum value for the red channel.
     * @type {number}
     * @memberof MultiBandRasterColorizer
     */
    blueMax: number;
    /**
     * The minimum value for the red channel.
     * @type {number}
     * @memberof MultiBandRasterColorizer
     */
    blueMin: number;
    /**
     * A scaling factor for the blue channel between 0 and 1.
     * @type {number}
     * @memberof MultiBandRasterColorizer
     */
    blueScale?: number;
    /**
     * The band index of the green channel.
     * @type {number}
     * @memberof MultiBandRasterColorizer
     */
    greenBand: number;
    /**
     * The maximum value for the red channel.
     * @type {number}
     * @memberof MultiBandRasterColorizer
     */
    greenMax: number;
    /**
     * The minimum value for the red channel.
     * @type {number}
     * @memberof MultiBandRasterColorizer
     */
    greenMin: number;
    /**
     * A scaling factor for the green channel between 0 and 1.
     * @type {number}
     * @memberof MultiBandRasterColorizer
     */
    greenScale?: number;
    /**
     *
     * @type {Array<number>}
     * @memberof MultiBandRasterColorizer
     */
    noDataColor?: Array<number>;
    /**
     * The band index of the red channel.
     * @type {number}
     * @memberof MultiBandRasterColorizer
     */
    redBand: number;
    /**
     * The maximum value for the red channel.
     * @type {number}
     * @memberof MultiBandRasterColorizer
     */
    redMax: number;
    /**
     * The minimum value for the red channel.
     * @type {number}
     * @memberof MultiBandRasterColorizer
     */
    redMin: number;
    /**
     * A scaling factor for the red channel between 0 and 1.
     * @type {number}
     * @memberof MultiBandRasterColorizer
     */
    redScale?: number;
    /**
     *
     * @type {string}
     * @memberof MultiBandRasterColorizer
     */
    type: MultiBandRasterColorizerTypeEnum;
}
/**
 * @export
 */
export declare const MultiBandRasterColorizerTypeEnum: {
    readonly MultiBand: "multiBand";
};
export type MultiBandRasterColorizerTypeEnum = typeof MultiBandRasterColorizerTypeEnum[keyof typeof MultiBandRasterColorizerTypeEnum];
/**
 * Check if a given object implements the MultiBandRasterColorizer interface.
 */
export declare function instanceOfMultiBandRasterColorizer(value: object): boolean;
export declare function MultiBandRasterColorizerFromJSON(json: any): MultiBandRasterColorizer;
export declare function MultiBandRasterColorizerFromJSONTyped(json: any, ignoreDiscriminator: boolean): MultiBandRasterColorizer;
export declare function MultiBandRasterColorizerToJSON(value?: MultiBandRasterColorizer | null): any;
