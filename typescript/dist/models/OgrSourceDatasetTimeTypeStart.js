"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Geo Engine API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.8.0
 * Contact: dev@geoengine.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.OgrSourceDatasetTimeTypeStartToJSON = exports.OgrSourceDatasetTimeTypeStartFromJSONTyped = exports.OgrSourceDatasetTimeTypeStartFromJSON = exports.instanceOfOgrSourceDatasetTimeTypeStart = exports.OgrSourceDatasetTimeTypeStartTypeEnum = void 0;
const OgrSourceDurationSpec_1 = require("./OgrSourceDurationSpec");
const OgrSourceTimeFormat_1 = require("./OgrSourceTimeFormat");
/**
 * @export
 */
exports.OgrSourceDatasetTimeTypeStartTypeEnum = {
    Start: 'start'
};
/**
 * Check if a given object implements the OgrSourceDatasetTimeTypeStart interface.
 */
function instanceOfOgrSourceDatasetTimeTypeStart(value) {
    let isInstance = true;
    isInstance = isInstance && "duration" in value;
    isInstance = isInstance && "startField" in value;
    isInstance = isInstance && "startFormat" in value;
    isInstance = isInstance && "type" in value;
    return isInstance;
}
exports.instanceOfOgrSourceDatasetTimeTypeStart = instanceOfOgrSourceDatasetTimeTypeStart;
function OgrSourceDatasetTimeTypeStartFromJSON(json) {
    return OgrSourceDatasetTimeTypeStartFromJSONTyped(json, false);
}
exports.OgrSourceDatasetTimeTypeStartFromJSON = OgrSourceDatasetTimeTypeStartFromJSON;
function OgrSourceDatasetTimeTypeStartFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'duration': (0, OgrSourceDurationSpec_1.OgrSourceDurationSpecFromJSON)(json['duration']),
        'startField': json['startField'],
        'startFormat': (0, OgrSourceTimeFormat_1.OgrSourceTimeFormatFromJSON)(json['startFormat']),
        'type': json['type'],
    };
}
exports.OgrSourceDatasetTimeTypeStartFromJSONTyped = OgrSourceDatasetTimeTypeStartFromJSONTyped;
function OgrSourceDatasetTimeTypeStartToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'duration': (0, OgrSourceDurationSpec_1.OgrSourceDurationSpecToJSON)(value.duration),
        'startField': value.startField,
        'startFormat': (0, OgrSourceTimeFormat_1.OgrSourceTimeFormatToJSON)(value.startFormat),
        'type': value.type,
    };
}
exports.OgrSourceDatasetTimeTypeStartToJSON = OgrSourceDatasetTimeTypeStartToJSON;
