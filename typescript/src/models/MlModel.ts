/* tslint:disable */
/* eslint-disable */
/**
 * Geo Engine API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.8.0
 * Contact: dev@geoengine.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { MlModelMetadata } from './MlModelMetadata';
import {
    MlModelMetadataFromJSON,
    MlModelMetadataFromJSONTyped,
    MlModelMetadataToJSON,
    MlModelMetadataToJSONTyped,
} from './MlModelMetadata';

/**
 * 
 * @export
 * @interface MlModel
 */
export interface MlModel {
    /**
     * 
     * @type {string}
     * @memberof MlModel
     */
    description: string;
    /**
     * 
     * @type {string}
     * @memberof MlModel
     */
    displayName: string;
    /**
     * 
     * @type {string}
     * @memberof MlModel
     */
    fileName: string;
    /**
     * 
     * @type {MlModelMetadata}
     * @memberof MlModel
     */
    metadata: MlModelMetadata;
    /**
     * 
     * @type {string}
     * @memberof MlModel
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof MlModel
     */
    upload: string;
}

/**
 * Check if a given object implements the MlModel interface.
 */
export function instanceOfMlModel(value: object): value is MlModel {
    if (!('description' in value) || value['description'] === undefined) return false;
    if (!('displayName' in value) || value['displayName'] === undefined) return false;
    if (!('fileName' in value) || value['fileName'] === undefined) return false;
    if (!('metadata' in value) || value['metadata'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('upload' in value) || value['upload'] === undefined) return false;
    return true;
}

export function MlModelFromJSON(json: any): MlModel {
    return MlModelFromJSONTyped(json, false);
}

export function MlModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): MlModel {
    if (json == null) {
        return json;
    }
    return {
        
        'description': json['description'],
        'displayName': json['displayName'],
        'fileName': json['fileName'],
        'metadata': MlModelMetadataFromJSON(json['metadata']),
        'name': json['name'],
        'upload': json['upload'],
    };
}

export function MlModelToJSON(json: any): MlModel {
    return MlModelToJSONTyped(json, false);
}

export function MlModelToJSONTyped(value?: MlModel | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'description': value['description'],
        'displayName': value['displayName'],
        'fileName': value['fileName'],
        'metadata': MlModelMetadataToJSON(value['metadata']),
        'name': value['name'],
        'upload': value['upload'],
    };
}

