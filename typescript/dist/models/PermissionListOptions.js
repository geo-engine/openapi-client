"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Geo Engine API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.8.0
 * Contact: dev@geoengine.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.PermissionListOptionsToJSONTyped = exports.PermissionListOptionsToJSON = exports.PermissionListOptionsFromJSONTyped = exports.PermissionListOptionsFromJSON = exports.instanceOfPermissionListOptions = void 0;
/**
 * Check if a given object implements the PermissionListOptions interface.
 */
function instanceOfPermissionListOptions(value) {
    if (!('limit' in value) || value['limit'] === undefined)
        return false;
    if (!('offset' in value) || value['offset'] === undefined)
        return false;
    return true;
}
exports.instanceOfPermissionListOptions = instanceOfPermissionListOptions;
function PermissionListOptionsFromJSON(json) {
    return PermissionListOptionsFromJSONTyped(json, false);
}
exports.PermissionListOptionsFromJSON = PermissionListOptionsFromJSON;
function PermissionListOptionsFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'limit': json['limit'],
        'offset': json['offset'],
    };
}
exports.PermissionListOptionsFromJSONTyped = PermissionListOptionsFromJSONTyped;
function PermissionListOptionsToJSON(json) {
    return PermissionListOptionsToJSONTyped(json, false);
}
exports.PermissionListOptionsToJSON = PermissionListOptionsToJSON;
function PermissionListOptionsToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'limit': value['limit'],
        'offset': value['offset'],
    };
}
exports.PermissionListOptionsToJSONTyped = PermissionListOptionsToJSONTyped;
