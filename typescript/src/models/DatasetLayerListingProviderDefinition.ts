/* tslint:disable */
/* eslint-disable */
/**
 * Geo Engine API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.8.0
 * Contact: dev@geoengine.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { DatasetLayerListingCollection } from './DatasetLayerListingCollection';
import {
    DatasetLayerListingCollectionFromJSON,
    DatasetLayerListingCollectionFromJSONTyped,
    DatasetLayerListingCollectionToJSON,
    DatasetLayerListingCollectionToJSONTyped,
} from './DatasetLayerListingCollection';

/**
 * 
 * @export
 * @interface DatasetLayerListingProviderDefinition
 */
export interface DatasetLayerListingProviderDefinition {
    /**
     * 
     * @type {Array<DatasetLayerListingCollection>}
     * @memberof DatasetLayerListingProviderDefinition
     */
    collections: Array<DatasetLayerListingCollection>;
    /**
     * 
     * @type {string}
     * @memberof DatasetLayerListingProviderDefinition
     */
    description: string;
    /**
     * 
     * @type {string}
     * @memberof DatasetLayerListingProviderDefinition
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof DatasetLayerListingProviderDefinition
     */
    name: string;
    /**
     * 
     * @type {number}
     * @memberof DatasetLayerListingProviderDefinition
     */
    priority?: number | null;
    /**
     * 
     * @type {string}
     * @memberof DatasetLayerListingProviderDefinition
     */
    type: DatasetLayerListingProviderDefinitionTypeEnum;
}


/**
 * @export
 */
export const DatasetLayerListingProviderDefinitionTypeEnum = {
    DatasetLayerListing: 'DatasetLayerListing'
} as const;
export type DatasetLayerListingProviderDefinitionTypeEnum = typeof DatasetLayerListingProviderDefinitionTypeEnum[keyof typeof DatasetLayerListingProviderDefinitionTypeEnum];


/**
 * Check if a given object implements the DatasetLayerListingProviderDefinition interface.
 */
export function instanceOfDatasetLayerListingProviderDefinition(value: object): value is DatasetLayerListingProviderDefinition {
    if (!('collections' in value) || value['collections'] === undefined) return false;
    if (!('description' in value) || value['description'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    return true;
}

export function DatasetLayerListingProviderDefinitionFromJSON(json: any): DatasetLayerListingProviderDefinition {
    return DatasetLayerListingProviderDefinitionFromJSONTyped(json, false);
}

export function DatasetLayerListingProviderDefinitionFromJSONTyped(json: any, ignoreDiscriminator: boolean): DatasetLayerListingProviderDefinition {
    if (json == null) {
        return json;
    }
    return {
        
        'collections': ((json['collections'] as Array<any>).map(DatasetLayerListingCollectionFromJSON)),
        'description': json['description'],
        'id': json['id'],
        'name': json['name'],
        'priority': json['priority'] == null ? undefined : json['priority'],
        'type': json['type'],
    };
}

export function DatasetLayerListingProviderDefinitionToJSON(json: any): DatasetLayerListingProviderDefinition {
    return DatasetLayerListingProviderDefinitionToJSONTyped(json, false);
}

export function DatasetLayerListingProviderDefinitionToJSONTyped(value?: DatasetLayerListingProviderDefinition | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'collections': ((value['collections'] as Array<any>).map(DatasetLayerListingCollectionToJSON)),
        'description': value['description'],
        'id': value['id'],
        'name': value['name'],
        'priority': value['priority'],
        'type': value['type'],
    };
}

