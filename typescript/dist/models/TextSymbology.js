"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Geo Engine API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.9.0
 * Contact: dev@geoengine.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfTextSymbology = instanceOfTextSymbology;
exports.TextSymbologyFromJSON = TextSymbologyFromJSON;
exports.TextSymbologyFromJSONTyped = TextSymbologyFromJSONTyped;
exports.TextSymbologyToJSON = TextSymbologyToJSON;
exports.TextSymbologyToJSONTyped = TextSymbologyToJSONTyped;
const StrokeParam_1 = require("./StrokeParam");
const ColorParam_1 = require("./ColorParam");
/**
 * Check if a given object implements the TextSymbology interface.
 */
function instanceOfTextSymbology(value) {
    if (!('attribute' in value) || value['attribute'] === undefined)
        return false;
    if (!('fillColor' in value) || value['fillColor'] === undefined)
        return false;
    if (!('stroke' in value) || value['stroke'] === undefined)
        return false;
    return true;
}
function TextSymbologyFromJSON(json) {
    return TextSymbologyFromJSONTyped(json, false);
}
function TextSymbologyFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'attribute': json['attribute'],
        'fillColor': (0, ColorParam_1.ColorParamFromJSON)(json['fillColor']),
        'stroke': (0, StrokeParam_1.StrokeParamFromJSON)(json['stroke']),
    };
}
function TextSymbologyToJSON(json) {
    return TextSymbologyToJSONTyped(json, false);
}
function TextSymbologyToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'attribute': value['attribute'],
        'fillColor': (0, ColorParam_1.ColorParamToJSON)(value['fillColor']),
        'stroke': (0, StrokeParam_1.StrokeParamToJSON)(value['stroke']),
    };
}
