/* tslint:disable */
/* eslint-disable */
/**
 * Geo Engine API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.9.0
 * Contact: dev@geoengine.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TimeReference } from './TimeReference';
import {
    TimeReferenceFromJSON,
    TimeReferenceFromJSONTyped,
    TimeReferenceToJSON,
    TimeReferenceToJSONTyped,
} from './TimeReference';

/**
 * 
 * @export
 * @interface GdalSourceTimePlaceholder
 */
export interface GdalSourceTimePlaceholder {
    /**
     * 
     * @type {string}
     * @memberof GdalSourceTimePlaceholder
     */
    format: string;
    /**
     * 
     * @type {TimeReference}
     * @memberof GdalSourceTimePlaceholder
     */
    reference: TimeReference;
}



/**
 * Check if a given object implements the GdalSourceTimePlaceholder interface.
 */
export function instanceOfGdalSourceTimePlaceholder(value: object): value is GdalSourceTimePlaceholder {
    if (!('format' in value) || value['format'] === undefined) return false;
    if (!('reference' in value) || value['reference'] === undefined) return false;
    return true;
}

export function GdalSourceTimePlaceholderFromJSON(json: any): GdalSourceTimePlaceholder {
    return GdalSourceTimePlaceholderFromJSONTyped(json, false);
}

export function GdalSourceTimePlaceholderFromJSONTyped(json: any, ignoreDiscriminator: boolean): GdalSourceTimePlaceholder {
    if (json == null) {
        return json;
    }
    return {
        
        'format': json['format'],
        'reference': TimeReferenceFromJSON(json['reference']),
    };
}

export function GdalSourceTimePlaceholderToJSON(json: any): GdalSourceTimePlaceholder {
    return GdalSourceTimePlaceholderToJSONTyped(json, false);
}

export function GdalSourceTimePlaceholderToJSONTyped(value?: GdalSourceTimePlaceholder | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'format': value['format'],
        'reference': TimeReferenceToJSON(value['reference']),
    };
}

