/* tslint:disable */
/* eslint-disable */
/**
 * Geo Engine API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.9.0
 * Contact: dev@geoengine.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { RasterPropertiesKey } from './RasterPropertiesKey';
import {
    RasterPropertiesKeyFromJSON,
    RasterPropertiesKeyFromJSONTyped,
    RasterPropertiesKeyToJSON,
    RasterPropertiesKeyToJSONTyped,
} from './RasterPropertiesKey';
import type { RasterPropertiesEntryType } from './RasterPropertiesEntryType';
import {
    RasterPropertiesEntryTypeFromJSON,
    RasterPropertiesEntryTypeFromJSONTyped,
    RasterPropertiesEntryTypeToJSON,
    RasterPropertiesEntryTypeToJSONTyped,
} from './RasterPropertiesEntryType';

/**
 * 
 * @export
 * @interface GdalMetadataMapping
 */
export interface GdalMetadataMapping {
    /**
     * 
     * @type {RasterPropertiesKey}
     * @memberof GdalMetadataMapping
     */
    sourceKey: RasterPropertiesKey;
    /**
     * 
     * @type {RasterPropertiesKey}
     * @memberof GdalMetadataMapping
     */
    targetKey: RasterPropertiesKey;
    /**
     * 
     * @type {RasterPropertiesEntryType}
     * @memberof GdalMetadataMapping
     */
    targetType: RasterPropertiesEntryType;
}



/**
 * Check if a given object implements the GdalMetadataMapping interface.
 */
export function instanceOfGdalMetadataMapping(value: object): value is GdalMetadataMapping {
    if (!('sourceKey' in value) || value['sourceKey'] === undefined) return false;
    if (!('targetKey' in value) || value['targetKey'] === undefined) return false;
    if (!('targetType' in value) || value['targetType'] === undefined) return false;
    return true;
}

export function GdalMetadataMappingFromJSON(json: any): GdalMetadataMapping {
    return GdalMetadataMappingFromJSONTyped(json, false);
}

export function GdalMetadataMappingFromJSONTyped(json: any, ignoreDiscriminator: boolean): GdalMetadataMapping {
    if (json == null) {
        return json;
    }
    return {
        
        'sourceKey': RasterPropertiesKeyFromJSON(json['source_key']),
        'targetKey': RasterPropertiesKeyFromJSON(json['target_key']),
        'targetType': RasterPropertiesEntryTypeFromJSON(json['target_type']),
    };
}

export function GdalMetadataMappingToJSON(json: any): GdalMetadataMapping {
    return GdalMetadataMappingToJSONTyped(json, false);
}

export function GdalMetadataMappingToJSONTyped(value?: GdalMetadataMapping | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'source_key': RasterPropertiesKeyToJSON(value['sourceKey']),
        'target_key': RasterPropertiesKeyToJSON(value['targetKey']),
        'target_type': RasterPropertiesEntryTypeToJSON(value['targetType']),
    };
}

