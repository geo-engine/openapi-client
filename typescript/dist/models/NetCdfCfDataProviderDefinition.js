"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Geo Engine API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.8.0
 * Contact: dev@geoengine.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.NetCdfCfDataProviderDefinitionTypeEnum = void 0;
exports.instanceOfNetCdfCfDataProviderDefinition = instanceOfNetCdfCfDataProviderDefinition;
exports.NetCdfCfDataProviderDefinitionFromJSON = NetCdfCfDataProviderDefinitionFromJSON;
exports.NetCdfCfDataProviderDefinitionFromJSONTyped = NetCdfCfDataProviderDefinitionFromJSONTyped;
exports.NetCdfCfDataProviderDefinitionToJSON = NetCdfCfDataProviderDefinitionToJSON;
exports.NetCdfCfDataProviderDefinitionToJSONTyped = NetCdfCfDataProviderDefinitionToJSONTyped;
/**
 * @export
 */
exports.NetCdfCfDataProviderDefinitionTypeEnum = {
    NetCdfCf: 'NetCdfCf'
};
/**
 * Check if a given object implements the NetCdfCfDataProviderDefinition interface.
 */
function instanceOfNetCdfCfDataProviderDefinition(value) {
    if (!('data' in value) || value['data'] === undefined)
        return false;
    if (!('description' in value) || value['description'] === undefined)
        return false;
    if (!('name' in value) || value['name'] === undefined)
        return false;
    if (!('overviews' in value) || value['overviews'] === undefined)
        return false;
    if (!('type' in value) || value['type'] === undefined)
        return false;
    return true;
}
function NetCdfCfDataProviderDefinitionFromJSON(json) {
    return NetCdfCfDataProviderDefinitionFromJSONTyped(json, false);
}
function NetCdfCfDataProviderDefinitionFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'cacheTtl': json['cacheTtl'] == null ? undefined : json['cacheTtl'],
        'data': json['data'],
        'description': json['description'],
        'name': json['name'],
        'overviews': json['overviews'],
        'priority': json['priority'] == null ? undefined : json['priority'],
        'type': json['type'],
    };
}
function NetCdfCfDataProviderDefinitionToJSON(json) {
    return NetCdfCfDataProviderDefinitionToJSONTyped(json, false);
}
function NetCdfCfDataProviderDefinitionToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'cacheTtl': value['cacheTtl'],
        'data': value['data'],
        'description': value['description'],
        'name': value['name'],
        'overviews': value['overviews'],
        'priority': value['priority'],
        'type': value['type'],
    };
}
