/* tslint:disable */
/* eslint-disable */
/**
 * Geo Engine API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.9.0
 * Contact: dev@geoengine.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Coordinate2D } from './Coordinate2D';
import {
    Coordinate2DFromJSON,
    Coordinate2DFromJSONTyped,
    Coordinate2DToJSON,
    Coordinate2DToJSONTyped,
} from './Coordinate2D';

/**
 * A partition of space that include the upper left but excludes the lower right coordinate
 * @export
 * @interface SpatialPartition2D
 */
export interface SpatialPartition2D {
    /**
     * 
     * @type {Coordinate2D}
     * @memberof SpatialPartition2D
     */
    lowerRightCoordinate: Coordinate2D;
    /**
     * 
     * @type {Coordinate2D}
     * @memberof SpatialPartition2D
     */
    upperLeftCoordinate: Coordinate2D;
}

/**
 * Check if a given object implements the SpatialPartition2D interface.
 */
export function instanceOfSpatialPartition2D(value: object): value is SpatialPartition2D {
    if (!('lowerRightCoordinate' in value) || value['lowerRightCoordinate'] === undefined) return false;
    if (!('upperLeftCoordinate' in value) || value['upperLeftCoordinate'] === undefined) return false;
    return true;
}

export function SpatialPartition2DFromJSON(json: any): SpatialPartition2D {
    return SpatialPartition2DFromJSONTyped(json, false);
}

export function SpatialPartition2DFromJSONTyped(json: any, ignoreDiscriminator: boolean): SpatialPartition2D {
    if (json == null) {
        return json;
    }
    return {
        
        'lowerRightCoordinate': Coordinate2DFromJSON(json['lowerRightCoordinate']),
        'upperLeftCoordinate': Coordinate2DFromJSON(json['upperLeftCoordinate']),
    };
}

export function SpatialPartition2DToJSON(json: any): SpatialPartition2D {
    return SpatialPartition2DToJSONTyped(json, false);
}

export function SpatialPartition2DToJSONTyped(value?: SpatialPartition2D | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'lowerRightCoordinate': Coordinate2DToJSON(value['lowerRightCoordinate']),
        'upperLeftCoordinate': Coordinate2DToJSON(value['upperLeftCoordinate']),
    };
}

