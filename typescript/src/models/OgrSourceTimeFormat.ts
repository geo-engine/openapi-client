/* tslint:disable */
/* eslint-disable */
/**
 * Geo Engine Pro API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.8.0
 * Contact: dev@geoengine.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import {
    AutoOgrSourceTimeFormat,
    instanceOfAutoOgrSourceTimeFormat,
    AutoOgrSourceTimeFormatFromJSON,
    AutoOgrSourceTimeFormatFromJSONTyped,
    AutoOgrSourceTimeFormatToJSON,
} from './AutoOgrSourceTimeFormat';
import {
    CustomOgrSourceTimeFormat,
    instanceOfCustomOgrSourceTimeFormat,
    CustomOgrSourceTimeFormatFromJSON,
    CustomOgrSourceTimeFormatFromJSONTyped,
    CustomOgrSourceTimeFormatToJSON,
} from './CustomOgrSourceTimeFormat';
import {
    UnixTimeStampOgrSourceTimeFormat,
    instanceOfUnixTimeStampOgrSourceTimeFormat,
    UnixTimeStampOgrSourceTimeFormatFromJSON,
    UnixTimeStampOgrSourceTimeFormatFromJSONTyped,
    UnixTimeStampOgrSourceTimeFormatToJSON,
} from './UnixTimeStampOgrSourceTimeFormat';

/**
 * @type OgrSourceTimeFormat
 * 
 * @export
 */
export type OgrSourceTimeFormat = { format: 'auto' } & AutoOgrSourceTimeFormat | { format: 'custom' } & CustomOgrSourceTimeFormat | { format: 'unixTimeStamp' } & UnixTimeStampOgrSourceTimeFormat;

export function OgrSourceTimeFormatFromJSON(json: any): OgrSourceTimeFormat {
    return OgrSourceTimeFormatFromJSONTyped(json, false);
}

export function OgrSourceTimeFormatFromJSONTyped(json: any, ignoreDiscriminator: boolean): OgrSourceTimeFormat {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    switch (json['format']) {
        case 'auto':
            return {...AutoOgrSourceTimeFormatFromJSONTyped(json, true), format: 'auto'};
        case 'custom':
            return {...CustomOgrSourceTimeFormatFromJSONTyped(json, true), format: 'custom'};
        case 'unixTimeStamp':
            return {...UnixTimeStampOgrSourceTimeFormatFromJSONTyped(json, true), format: 'unixTimeStamp'};
        default:
            throw new Error(`No variant of OgrSourceTimeFormat exists with 'format=${json['format']}'`);
    }
}

export function OgrSourceTimeFormatToJSON(value?: OgrSourceTimeFormat | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    switch (value['format']) {
        case 'auto':
            return AutoOgrSourceTimeFormatToJSON(value);
        case 'custom':
            return CustomOgrSourceTimeFormatToJSON(value);
        case 'unixTimeStamp':
            return UnixTimeStampOgrSourceTimeFormatToJSON(value);
        default:
            throw new Error(`No variant of OgrSourceTimeFormat exists with 'format=${value['format']}'`);
    }

}

