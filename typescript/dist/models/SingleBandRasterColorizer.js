"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Geo Engine Pro API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.7.0
 * Contact: dev@geoengine.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.SingleBandRasterColorizerToJSON = exports.SingleBandRasterColorizerFromJSONTyped = exports.SingleBandRasterColorizerFromJSON = exports.instanceOfSingleBandRasterColorizer = exports.SingleBandRasterColorizerTypeEnum = void 0;
const Colorizer_1 = require("./Colorizer");
/**
 * @export
 */
exports.SingleBandRasterColorizerTypeEnum = {
    SingleBand: 'singleBand'
};
/**
 * Check if a given object implements the SingleBandRasterColorizer interface.
 */
function instanceOfSingleBandRasterColorizer(value) {
    let isInstance = true;
    isInstance = isInstance && "band" in value;
    isInstance = isInstance && "bandColorizer" in value;
    isInstance = isInstance && "type" in value;
    return isInstance;
}
exports.instanceOfSingleBandRasterColorizer = instanceOfSingleBandRasterColorizer;
function SingleBandRasterColorizerFromJSON(json) {
    return SingleBandRasterColorizerFromJSONTyped(json, false);
}
exports.SingleBandRasterColorizerFromJSON = SingleBandRasterColorizerFromJSON;
function SingleBandRasterColorizerFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'band': json['band'],
        'bandColorizer': (0, Colorizer_1.ColorizerFromJSON)(json['bandColorizer']),
        'type': json['type'],
    };
}
exports.SingleBandRasterColorizerFromJSONTyped = SingleBandRasterColorizerFromJSONTyped;
function SingleBandRasterColorizerToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'band': value.band,
        'bandColorizer': (0, Colorizer_1.ColorizerToJSON)(value.bandColorizer),
        'type': value.type,
    };
}
exports.SingleBandRasterColorizerToJSON = SingleBandRasterColorizerToJSON;
