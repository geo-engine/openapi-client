/* tslint:disable */
/* eslint-disable */
/**
 * Geo Engine API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.8.0
 * Contact: dev@geoengine.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { DatabaseConnectionConfig } from './DatabaseConnectionConfig';
import {
    DatabaseConnectionConfigFromJSON,
    DatabaseConnectionConfigFromJSONTyped,
    DatabaseConnectionConfigToJSON,
    DatabaseConnectionConfigToJSONTyped,
} from './DatabaseConnectionConfig';

/**
 * 
 * @export
 * @interface GfbioCollectionsDataProviderDefinition
 */
export interface GfbioCollectionsDataProviderDefinition {
    /**
     * 
     * @type {DatabaseConnectionConfig}
     * @memberof GfbioCollectionsDataProviderDefinition
     */
    abcdDbConfig: DatabaseConnectionConfig;
    /**
     * 
     * @type {number}
     * @memberof GfbioCollectionsDataProviderDefinition
     */
    cacheTtl?: number;
    /**
     * 
     * @type {string}
     * @memberof GfbioCollectionsDataProviderDefinition
     */
    collectionApiAuthToken: string;
    /**
     * 
     * @type {string}
     * @memberof GfbioCollectionsDataProviderDefinition
     */
    collectionApiUrl: string;
    /**
     * 
     * @type {string}
     * @memberof GfbioCollectionsDataProviderDefinition
     */
    description: string;
    /**
     * 
     * @type {string}
     * @memberof GfbioCollectionsDataProviderDefinition
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof GfbioCollectionsDataProviderDefinition
     */
    pangaeaUrl: string;
    /**
     * 
     * @type {number}
     * @memberof GfbioCollectionsDataProviderDefinition
     */
    priority?: number | null;
    /**
     * 
     * @type {string}
     * @memberof GfbioCollectionsDataProviderDefinition
     */
    type: GfbioCollectionsDataProviderDefinitionTypeEnum;
}


/**
 * @export
 */
export const GfbioCollectionsDataProviderDefinitionTypeEnum = {
    GfbioCollections: 'GfbioCollections'
} as const;
export type GfbioCollectionsDataProviderDefinitionTypeEnum = typeof GfbioCollectionsDataProviderDefinitionTypeEnum[keyof typeof GfbioCollectionsDataProviderDefinitionTypeEnum];


/**
 * Check if a given object implements the GfbioCollectionsDataProviderDefinition interface.
 */
export function instanceOfGfbioCollectionsDataProviderDefinition(value: object): value is GfbioCollectionsDataProviderDefinition {
    if (!('abcdDbConfig' in value) || value['abcdDbConfig'] === undefined) return false;
    if (!('collectionApiAuthToken' in value) || value['collectionApiAuthToken'] === undefined) return false;
    if (!('collectionApiUrl' in value) || value['collectionApiUrl'] === undefined) return false;
    if (!('description' in value) || value['description'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('pangaeaUrl' in value) || value['pangaeaUrl'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    return true;
}

export function GfbioCollectionsDataProviderDefinitionFromJSON(json: any): GfbioCollectionsDataProviderDefinition {
    return GfbioCollectionsDataProviderDefinitionFromJSONTyped(json, false);
}

export function GfbioCollectionsDataProviderDefinitionFromJSONTyped(json: any, ignoreDiscriminator: boolean): GfbioCollectionsDataProviderDefinition {
    if (json == null) {
        return json;
    }
    return {
        
        'abcdDbConfig': DatabaseConnectionConfigFromJSON(json['abcdDbConfig']),
        'cacheTtl': json['cacheTtl'] == null ? undefined : json['cacheTtl'],
        'collectionApiAuthToken': json['collectionApiAuthToken'],
        'collectionApiUrl': json['collectionApiUrl'],
        'description': json['description'],
        'name': json['name'],
        'pangaeaUrl': json['pangaeaUrl'],
        'priority': json['priority'] == null ? undefined : json['priority'],
        'type': json['type'],
    };
}

export function GfbioCollectionsDataProviderDefinitionToJSON(json: any): GfbioCollectionsDataProviderDefinition {
    return GfbioCollectionsDataProviderDefinitionToJSONTyped(json, false);
}

export function GfbioCollectionsDataProviderDefinitionToJSONTyped(value?: GfbioCollectionsDataProviderDefinition | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'abcdDbConfig': DatabaseConnectionConfigToJSON(value['abcdDbConfig']),
        'cacheTtl': value['cacheTtl'],
        'collectionApiAuthToken': value['collectionApiAuthToken'],
        'collectionApiUrl': value['collectionApiUrl'],
        'description': value['description'],
        'name': value['name'],
        'pangaeaUrl': value['pangaeaUrl'],
        'priority': value['priority'],
        'type': value['type'],
    };
}

