/* tslint:disable */
/* eslint-disable */
/**
 * Geo Engine API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.9.0
 * Contact: dev@geoengine.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PlotOutputFormat } from './PlotOutputFormat';
import {
    PlotOutputFormatFromJSON,
    PlotOutputFormatFromJSONTyped,
    PlotOutputFormatToJSON,
    PlotOutputFormatToJSONTyped,
} from './PlotOutputFormat';

/**
 * 
 * @export
 * @interface WrappedPlotOutput
 */
export interface WrappedPlotOutput {
    /**
     * 
     * @type {object}
     * @memberof WrappedPlotOutput
     */
    data: object;
    /**
     * 
     * @type {PlotOutputFormat}
     * @memberof WrappedPlotOutput
     */
    outputFormat: PlotOutputFormat;
    /**
     * 
     * @type {string}
     * @memberof WrappedPlotOutput
     */
    plotType: string;
}



/**
 * Check if a given object implements the WrappedPlotOutput interface.
 */
export function instanceOfWrappedPlotOutput(value: object): value is WrappedPlotOutput {
    if (!('data' in value) || value['data'] === undefined) return false;
    if (!('outputFormat' in value) || value['outputFormat'] === undefined) return false;
    if (!('plotType' in value) || value['plotType'] === undefined) return false;
    return true;
}

export function WrappedPlotOutputFromJSON(json: any): WrappedPlotOutput {
    return WrappedPlotOutputFromJSONTyped(json, false);
}

export function WrappedPlotOutputFromJSONTyped(json: any, ignoreDiscriminator: boolean): WrappedPlotOutput {
    if (json == null) {
        return json;
    }
    return {
        
        'data': json['data'],
        'outputFormat': PlotOutputFormatFromJSON(json['outputFormat']),
        'plotType': json['plotType'],
    };
}

export function WrappedPlotOutputToJSON(json: any): WrappedPlotOutput {
    return WrappedPlotOutputToJSONTyped(json, false);
}

export function WrappedPlotOutputToJSONTyped(value?: WrappedPlotOutput | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'data': value['data'],
        'outputFormat': PlotOutputFormatToJSON(value['outputFormat']),
        'plotType': value['plotType'],
    };
}

