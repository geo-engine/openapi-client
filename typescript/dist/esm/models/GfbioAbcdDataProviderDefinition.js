/* tslint:disable */
/* eslint-disable */
/**
 * Geo Engine API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.8.0
 * Contact: dev@geoengine.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { DatabaseConnectionConfigFromJSON, DatabaseConnectionConfigToJSON, } from './DatabaseConnectionConfig';
/**
 * @export
 */
export const GfbioAbcdDataProviderDefinitionTypeEnum = {
    GfbioAbcd: 'GfbioAbcd'
};
/**
 * Check if a given object implements the GfbioAbcdDataProviderDefinition interface.
 */
export function instanceOfGfbioAbcdDataProviderDefinition(value) {
    if (!('dbConfig' in value) || value['dbConfig'] === undefined)
        return false;
    if (!('description' in value) || value['description'] === undefined)
        return false;
    if (!('name' in value) || value['name'] === undefined)
        return false;
    if (!('type' in value) || value['type'] === undefined)
        return false;
    return true;
}
export function GfbioAbcdDataProviderDefinitionFromJSON(json) {
    return GfbioAbcdDataProviderDefinitionFromJSONTyped(json, false);
}
export function GfbioAbcdDataProviderDefinitionFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'cacheTtl': json['cacheTtl'] == null ? undefined : json['cacheTtl'],
        'dbConfig': DatabaseConnectionConfigFromJSON(json['dbConfig']),
        'description': json['description'],
        'name': json['name'],
        'priority': json['priority'] == null ? undefined : json['priority'],
        'type': json['type'],
    };
}
export function GfbioAbcdDataProviderDefinitionToJSON(json) {
    return GfbioAbcdDataProviderDefinitionToJSONTyped(json, false);
}
export function GfbioAbcdDataProviderDefinitionToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'cacheTtl': value['cacheTtl'],
        'dbConfig': DatabaseConnectionConfigToJSON(value['dbConfig']),
        'description': value['description'],
        'name': value['name'],
        'priority': value['priority'],
        'type': value['type'],
    };
}
